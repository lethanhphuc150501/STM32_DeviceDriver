
4_WorkingWithITM-Printf_logs.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000130  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00001374  08000130  08000130  00010130  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000104  080014a4  080014a4  000114a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  080015a8  080015a8  00020064  2**0
                  CONTENTS
  4 .ARM          00000000  080015a8  080015a8  00020064  2**0
                  CONTENTS
  5 .preinit_array 00000000  080015a8  080015a8  00020064  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080015a8  080015a8  000115a8  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  080015ac  080015ac  000115ac  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000064  20000000  080015b0  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000030  20000064  08001614  00020064  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  20000094  08001614  00020094  2**0
                  ALLOC
 11 .ARM.attributes 00000029  00000000  00000000  00020064  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000d42  00000000  00000000  0002008d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000464  00000000  00000000  00020dcf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000150  00000000  00000000  00021238  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_ranges 00000108  00000000  00000000  00021388  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00011c40  00000000  00000000  00021490  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000189e  00000000  00000000  000330d0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000597c5  00000000  00000000  0003496e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000050  00000000  00000000  0008e133  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000c60  00000000  00000000  0008e184  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000130 <__do_global_dtors_aux>:
 8000130:	b510      	push	{r4, lr}
 8000132:	4c05      	ldr	r4, [pc, #20]	; (8000148 <__do_global_dtors_aux+0x18>)
 8000134:	7823      	ldrb	r3, [r4, #0]
 8000136:	b933      	cbnz	r3, 8000146 <__do_global_dtors_aux+0x16>
 8000138:	4b04      	ldr	r3, [pc, #16]	; (800014c <__do_global_dtors_aux+0x1c>)
 800013a:	b113      	cbz	r3, 8000142 <__do_global_dtors_aux+0x12>
 800013c:	4804      	ldr	r0, [pc, #16]	; (8000150 <__do_global_dtors_aux+0x20>)
 800013e:	f3af 8000 	nop.w
 8000142:	2301      	movs	r3, #1
 8000144:	7023      	strb	r3, [r4, #0]
 8000146:	bd10      	pop	{r4, pc}
 8000148:	20000064 	.word	0x20000064
 800014c:	00000000 	.word	0x00000000
 8000150:	0800148c 	.word	0x0800148c

08000154 <frame_dummy>:
 8000154:	b508      	push	{r3, lr}
 8000156:	4b03      	ldr	r3, [pc, #12]	; (8000164 <frame_dummy+0x10>)
 8000158:	b11b      	cbz	r3, 8000162 <frame_dummy+0xe>
 800015a:	4903      	ldr	r1, [pc, #12]	; (8000168 <frame_dummy+0x14>)
 800015c:	4803      	ldr	r0, [pc, #12]	; (800016c <frame_dummy+0x18>)
 800015e:	f3af 8000 	nop.w
 8000162:	bd08      	pop	{r3, pc}
 8000164:	00000000 	.word	0x00000000
 8000168:	20000068 	.word	0x20000068
 800016c:	0800148c 	.word	0x0800148c

08000170 <main>:
#include "stm32f1xx.h"
#include "swo.h"

int main(void)
{
 8000170:	b580      	push	{r7, lr}
 8000172:	af00      	add	r7, sp, #0
	log_error("Initialization failed\n");
 8000174:	4804      	ldr	r0, [pc, #16]	; (8000188 <main+0x18>)
 8000176:	f000 f841 	bl	80001fc <log_error>
	log_info("Filter complete\n");
 800017a:	4804      	ldr	r0, [pc, #16]	; (800018c <main+0x1c>)
 800017c:	f000 f854 	bl	8000228 <log_info>
	log_debug("Warning, bad argument\n");
 8000180:	4803      	ldr	r0, [pc, #12]	; (8000190 <main+0x20>)
 8000182:	f000 f867 	bl	8000254 <log_debug>
	while(1)
 8000186:	e7fe      	b.n	8000186 <main+0x16>
 8000188:	080014a4 	.word	0x080014a4
 800018c:	080014bc 	.word	0x080014bc
 8000190:	080014d0 	.word	0x080014d0

08000194 <ITM_SendChar>:
           \li Is blocking when a debugger is connected, but the previous character sent has not been transmitted.
  \param [in]     ch  Character to transmit.
  \returns            Character to transmit.
 */
__STATIC_INLINE uint32_t ITM_SendChar (uint32_t ch)
{
 8000194:	b480      	push	{r7}
 8000196:	b083      	sub	sp, #12
 8000198:	af00      	add	r7, sp, #0
 800019a:	6078      	str	r0, [r7, #4]
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 800019c:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80001a0:	f8d3 3e80 	ldr.w	r3, [r3, #3712]	; 0xe80
 80001a4:	f003 0301 	and.w	r3, r3, #1
 80001a8:	2b00      	cmp	r3, #0
 80001aa:	d013      	beq.n	80001d4 <ITM_SendChar+0x40>
      ((ITM->TER & 1UL               ) != 0UL)   )     /* ITM Port #0 enabled */
 80001ac:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80001b0:	f8d3 3e00 	ldr.w	r3, [r3, #3584]	; 0xe00
 80001b4:	f003 0301 	and.w	r3, r3, #1
  if (((ITM->TCR & ITM_TCR_ITMENA_Msk) != 0UL) &&      /* ITM enabled */
 80001b8:	2b00      	cmp	r3, #0
 80001ba:	d00b      	beq.n	80001d4 <ITM_SendChar+0x40>
  {
    while (ITM->PORT[0U].u32 == 0UL)
 80001bc:	e000      	b.n	80001c0 <ITM_SendChar+0x2c>
    {
      __NOP();
 80001be:	bf00      	nop
    while (ITM->PORT[0U].u32 == 0UL)
 80001c0:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80001c4:	681b      	ldr	r3, [r3, #0]
 80001c6:	2b00      	cmp	r3, #0
 80001c8:	d0f9      	beq.n	80001be <ITM_SendChar+0x2a>
    }
    ITM->PORT[0U].u8 = (uint8_t)ch;
 80001ca:	f04f 4360 	mov.w	r3, #3758096384	; 0xe0000000
 80001ce:	687a      	ldr	r2, [r7, #4]
 80001d0:	b2d2      	uxtb	r2, r2
 80001d2:	701a      	strb	r2, [r3, #0]
  }
  return (ch);
 80001d4:	687b      	ldr	r3, [r7, #4]
}
 80001d6:	4618      	mov	r0, r3
 80001d8:	370c      	adds	r7, #12
 80001da:	46bd      	mov	sp, r7
 80001dc:	bc80      	pop	{r7}
 80001de:	4770      	bx	lr

080001e0 <__io_putchar>:

#include "stm32f1xx.h"
#include <stdio.h>

int __io_putchar(int ch)
{
 80001e0:	b580      	push	{r7, lr}
 80001e2:	b082      	sub	sp, #8
 80001e4:	af00      	add	r7, sp, #0
 80001e6:	6078      	str	r0, [r7, #4]
	ITM_SendChar(ch);
 80001e8:	687b      	ldr	r3, [r7, #4]
 80001ea:	4618      	mov	r0, r3
 80001ec:	f7ff ffd2 	bl	8000194 <ITM_SendChar>
	return ch;
 80001f0:	687b      	ldr	r3, [r7, #4]
}
 80001f2:	4618      	mov	r0, r3
 80001f4:	3708      	adds	r7, #8
 80001f6:	46bd      	mov	sp, r7
 80001f8:	bd80      	pop	{r7, pc}
	...

080001fc <log_error>:

void log_error(char* p)
{
 80001fc:	b580      	push	{r7, lr}
 80001fe:	b082      	sub	sp, #8
 8000200:	af00      	add	r7, sp, #0
 8000202:	6078      	str	r0, [r7, #4]
	printf("log error: ");
 8000204:	4806      	ldr	r0, [pc, #24]	; (8000220 <log_error+0x24>)
 8000206:	f000 f937 	bl	8000478 <iprintf>
	printf((char*)p);
 800020a:	6878      	ldr	r0, [r7, #4]
 800020c:	f000 f934 	bl	8000478 <iprintf>
	printf("\r\n");
 8000210:	4804      	ldr	r0, [pc, #16]	; (8000224 <log_error+0x28>)
 8000212:	f000 f9b7 	bl	8000584 <puts>
}
 8000216:	bf00      	nop
 8000218:	3708      	adds	r7, #8
 800021a:	46bd      	mov	sp, r7
 800021c:	bd80      	pop	{r7, pc}
 800021e:	bf00      	nop
 8000220:	080014e8 	.word	0x080014e8
 8000224:	080014f4 	.word	0x080014f4

08000228 <log_info>:

void log_info(char* p)
{
 8000228:	b580      	push	{r7, lr}
 800022a:	b082      	sub	sp, #8
 800022c:	af00      	add	r7, sp, #0
 800022e:	6078      	str	r0, [r7, #4]
	printf("log info: ");
 8000230:	4806      	ldr	r0, [pc, #24]	; (800024c <log_info+0x24>)
 8000232:	f000 f921 	bl	8000478 <iprintf>
	printf((char*)p);
 8000236:	6878      	ldr	r0, [r7, #4]
 8000238:	f000 f91e 	bl	8000478 <iprintf>
	printf("\r\n");
 800023c:	4804      	ldr	r0, [pc, #16]	; (8000250 <log_info+0x28>)
 800023e:	f000 f9a1 	bl	8000584 <puts>
}
 8000242:	bf00      	nop
 8000244:	3708      	adds	r7, #8
 8000246:	46bd      	mov	sp, r7
 8000248:	bd80      	pop	{r7, pc}
 800024a:	bf00      	nop
 800024c:	080014f8 	.word	0x080014f8
 8000250:	080014f4 	.word	0x080014f4

08000254 <log_debug>:

void log_debug(char* p)
{
 8000254:	b580      	push	{r7, lr}
 8000256:	b082      	sub	sp, #8
 8000258:	af00      	add	r7, sp, #0
 800025a:	6078      	str	r0, [r7, #4]
	printf("log debug: ");
 800025c:	4806      	ldr	r0, [pc, #24]	; (8000278 <log_debug+0x24>)
 800025e:	f000 f90b 	bl	8000478 <iprintf>
	printf((char*)p);
 8000262:	6878      	ldr	r0, [r7, #4]
 8000264:	f000 f908 	bl	8000478 <iprintf>
	printf("\r\n");
 8000268:	4804      	ldr	r0, [pc, #16]	; (800027c <log_debug+0x28>)
 800026a:	f000 f98b 	bl	8000584 <puts>
}
 800026e:	bf00      	nop
 8000270:	3708      	adds	r7, #8
 8000272:	46bd      	mov	sp, r7
 8000274:	bd80      	pop	{r7, pc}
 8000276:	bf00      	nop
 8000278:	08001504 	.word	0x08001504
 800027c:	080014f4 	.word	0x080014f4

08000280 <_read>:
	_kill(status, -1);
	while (1) {}		/* Make sure we hang here */
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b086      	sub	sp, #24
 8000284:	af00      	add	r7, sp, #0
 8000286:	60f8      	str	r0, [r7, #12]
 8000288:	60b9      	str	r1, [r7, #8]
 800028a:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 800028c:	2300      	movs	r3, #0
 800028e:	617b      	str	r3, [r7, #20]
 8000290:	e00a      	b.n	80002a8 <_read+0x28>
	{
		*ptr++ = __io_getchar();
 8000292:	f3af 8000 	nop.w
 8000296:	4601      	mov	r1, r0
 8000298:	68bb      	ldr	r3, [r7, #8]
 800029a:	1c5a      	adds	r2, r3, #1
 800029c:	60ba      	str	r2, [r7, #8]
 800029e:	b2ca      	uxtb	r2, r1
 80002a0:	701a      	strb	r2, [r3, #0]
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002a2:	697b      	ldr	r3, [r7, #20]
 80002a4:	3301      	adds	r3, #1
 80002a6:	617b      	str	r3, [r7, #20]
 80002a8:	697a      	ldr	r2, [r7, #20]
 80002aa:	687b      	ldr	r3, [r7, #4]
 80002ac:	429a      	cmp	r2, r3
 80002ae:	dbf0      	blt.n	8000292 <_read+0x12>
	}

return len;
 80002b0:	687b      	ldr	r3, [r7, #4]
}
 80002b2:	4618      	mov	r0, r3
 80002b4:	3718      	adds	r7, #24
 80002b6:	46bd      	mov	sp, r7
 80002b8:	bd80      	pop	{r7, pc}

080002ba <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 80002ba:	b580      	push	{r7, lr}
 80002bc:	b086      	sub	sp, #24
 80002be:	af00      	add	r7, sp, #0
 80002c0:	60f8      	str	r0, [r7, #12]
 80002c2:	60b9      	str	r1, [r7, #8]
 80002c4:	607a      	str	r2, [r7, #4]
	int DataIdx;

	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002c6:	2300      	movs	r3, #0
 80002c8:	617b      	str	r3, [r7, #20]
 80002ca:	e009      	b.n	80002e0 <_write+0x26>
	{
		__io_putchar(*ptr++);
 80002cc:	68bb      	ldr	r3, [r7, #8]
 80002ce:	1c5a      	adds	r2, r3, #1
 80002d0:	60ba      	str	r2, [r7, #8]
 80002d2:	781b      	ldrb	r3, [r3, #0]
 80002d4:	4618      	mov	r0, r3
 80002d6:	f7ff ff83 	bl	80001e0 <__io_putchar>
	for (DataIdx = 0; DataIdx < len; DataIdx++)
 80002da:	697b      	ldr	r3, [r7, #20]
 80002dc:	3301      	adds	r3, #1
 80002de:	617b      	str	r3, [r7, #20]
 80002e0:	697a      	ldr	r2, [r7, #20]
 80002e2:	687b      	ldr	r3, [r7, #4]
 80002e4:	429a      	cmp	r2, r3
 80002e6:	dbf1      	blt.n	80002cc <_write+0x12>
	}
	return len;
 80002e8:	687b      	ldr	r3, [r7, #4]
}
 80002ea:	4618      	mov	r0, r3
 80002ec:	3718      	adds	r7, #24
 80002ee:	46bd      	mov	sp, r7
 80002f0:	bd80      	pop	{r7, pc}

080002f2 <_close>:

int _close(int file)
{
 80002f2:	b480      	push	{r7}
 80002f4:	b083      	sub	sp, #12
 80002f6:	af00      	add	r7, sp, #0
 80002f8:	6078      	str	r0, [r7, #4]
	return -1;
 80002fa:	f04f 33ff 	mov.w	r3, #4294967295
}
 80002fe:	4618      	mov	r0, r3
 8000300:	370c      	adds	r7, #12
 8000302:	46bd      	mov	sp, r7
 8000304:	bc80      	pop	{r7}
 8000306:	4770      	bx	lr

08000308 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8000308:	b480      	push	{r7}
 800030a:	b083      	sub	sp, #12
 800030c:	af00      	add	r7, sp, #0
 800030e:	6078      	str	r0, [r7, #4]
 8000310:	6039      	str	r1, [r7, #0]
	st->st_mode = S_IFCHR;
 8000312:	683b      	ldr	r3, [r7, #0]
 8000314:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8000318:	605a      	str	r2, [r3, #4]
	return 0;
 800031a:	2300      	movs	r3, #0
}
 800031c:	4618      	mov	r0, r3
 800031e:	370c      	adds	r7, #12
 8000320:	46bd      	mov	sp, r7
 8000322:	bc80      	pop	{r7}
 8000324:	4770      	bx	lr

08000326 <_isatty>:

int _isatty(int file)
{
 8000326:	b480      	push	{r7}
 8000328:	b083      	sub	sp, #12
 800032a:	af00      	add	r7, sp, #0
 800032c:	6078      	str	r0, [r7, #4]
	return 1;
 800032e:	2301      	movs	r3, #1
}
 8000330:	4618      	mov	r0, r3
 8000332:	370c      	adds	r7, #12
 8000334:	46bd      	mov	sp, r7
 8000336:	bc80      	pop	{r7}
 8000338:	4770      	bx	lr

0800033a <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 800033a:	b480      	push	{r7}
 800033c:	b085      	sub	sp, #20
 800033e:	af00      	add	r7, sp, #0
 8000340:	60f8      	str	r0, [r7, #12]
 8000342:	60b9      	str	r1, [r7, #8]
 8000344:	607a      	str	r2, [r7, #4]
	return 0;
 8000346:	2300      	movs	r3, #0
}
 8000348:	4618      	mov	r0, r3
 800034a:	3714      	adds	r7, #20
 800034c:	46bd      	mov	sp, r7
 800034e:	bc80      	pop	{r7}
 8000350:	4770      	bx	lr
	...

08000354 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 8000354:	b580      	push	{r7, lr}
 8000356:	b086      	sub	sp, #24
 8000358:	af00      	add	r7, sp, #0
 800035a:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 800035c:	4a14      	ldr	r2, [pc, #80]	; (80003b0 <_sbrk+0x5c>)
 800035e:	4b15      	ldr	r3, [pc, #84]	; (80003b4 <_sbrk+0x60>)
 8000360:	1ad3      	subs	r3, r2, r3
 8000362:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 8000364:	697b      	ldr	r3, [r7, #20]
 8000366:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8000368:	4b13      	ldr	r3, [pc, #76]	; (80003b8 <_sbrk+0x64>)
 800036a:	681b      	ldr	r3, [r3, #0]
 800036c:	2b00      	cmp	r3, #0
 800036e:	d102      	bne.n	8000376 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8000370:	4b11      	ldr	r3, [pc, #68]	; (80003b8 <_sbrk+0x64>)
 8000372:	4a12      	ldr	r2, [pc, #72]	; (80003bc <_sbrk+0x68>)
 8000374:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8000376:	4b10      	ldr	r3, [pc, #64]	; (80003b8 <_sbrk+0x64>)
 8000378:	681a      	ldr	r2, [r3, #0]
 800037a:	687b      	ldr	r3, [r7, #4]
 800037c:	4413      	add	r3, r2
 800037e:	693a      	ldr	r2, [r7, #16]
 8000380:	429a      	cmp	r2, r3
 8000382:	d207      	bcs.n	8000394 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8000384:	f000 f846 	bl	8000414 <__errno>
 8000388:	4603      	mov	r3, r0
 800038a:	220c      	movs	r2, #12
 800038c:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800038e:	f04f 33ff 	mov.w	r3, #4294967295
 8000392:	e009      	b.n	80003a8 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8000394:	4b08      	ldr	r3, [pc, #32]	; (80003b8 <_sbrk+0x64>)
 8000396:	681b      	ldr	r3, [r3, #0]
 8000398:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 800039a:	4b07      	ldr	r3, [pc, #28]	; (80003b8 <_sbrk+0x64>)
 800039c:	681a      	ldr	r2, [r3, #0]
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	4413      	add	r3, r2
 80003a2:	4a05      	ldr	r2, [pc, #20]	; (80003b8 <_sbrk+0x64>)
 80003a4:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 80003a6:	68fb      	ldr	r3, [r7, #12]
}
 80003a8:	4618      	mov	r0, r3
 80003aa:	3718      	adds	r7, #24
 80003ac:	46bd      	mov	sp, r7
 80003ae:	bd80      	pop	{r7, pc}
 80003b0:	20005000 	.word	0x20005000
 80003b4:	00000400 	.word	0x00000400
 80003b8:	20000080 	.word	0x20000080
 80003bc:	20000098 	.word	0x20000098

080003c0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80003c0:	480d      	ldr	r0, [pc, #52]	; (80003f8 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80003c2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80003c4:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80003c8:	480c      	ldr	r0, [pc, #48]	; (80003fc <LoopForever+0x6>)
  ldr r1, =_edata
 80003ca:	490d      	ldr	r1, [pc, #52]	; (8000400 <LoopForever+0xa>)
  ldr r2, =_sidata
 80003cc:	4a0d      	ldr	r2, [pc, #52]	; (8000404 <LoopForever+0xe>)
  movs r3, #0
 80003ce:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80003d0:	e002      	b.n	80003d8 <LoopCopyDataInit>

080003d2 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80003d2:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80003d4:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80003d6:	3304      	adds	r3, #4

080003d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80003d8:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80003da:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80003dc:	d3f9      	bcc.n	80003d2 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80003de:	4a0a      	ldr	r2, [pc, #40]	; (8000408 <LoopForever+0x12>)
  ldr r4, =_ebss
 80003e0:	4c0a      	ldr	r4, [pc, #40]	; (800040c <LoopForever+0x16>)
  movs r3, #0
 80003e2:	2300      	movs	r3, #0
  b LoopFillZerobss
 80003e4:	e001      	b.n	80003ea <LoopFillZerobss>

080003e6 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80003e6:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80003e8:	3204      	adds	r2, #4

080003ea <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80003ea:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80003ec:	d3fb      	bcc.n	80003e6 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80003ee:	f000 f817 	bl	8000420 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80003f2:	f7ff febd 	bl	8000170 <main>

080003f6 <LoopForever>:

LoopForever:
    b LoopForever
 80003f6:	e7fe      	b.n	80003f6 <LoopForever>
  ldr   r0, =_estack
 80003f8:	20005000 	.word	0x20005000
  ldr r0, =_sdata
 80003fc:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000400:	20000064 	.word	0x20000064
  ldr r2, =_sidata
 8000404:	080015b0 	.word	0x080015b0
  ldr r2, =_sbss
 8000408:	20000064 	.word	0x20000064
  ldr r4, =_ebss
 800040c:	20000094 	.word	0x20000094

08000410 <ADC1_2_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000410:	e7fe      	b.n	8000410 <ADC1_2_IRQHandler>
	...

08000414 <__errno>:
 8000414:	4b01      	ldr	r3, [pc, #4]	; (800041c <__errno+0x8>)
 8000416:	6818      	ldr	r0, [r3, #0]
 8000418:	4770      	bx	lr
 800041a:	bf00      	nop
 800041c:	20000000 	.word	0x20000000

08000420 <__libc_init_array>:
 8000420:	b570      	push	{r4, r5, r6, lr}
 8000422:	2600      	movs	r6, #0
 8000424:	4d0c      	ldr	r5, [pc, #48]	; (8000458 <__libc_init_array+0x38>)
 8000426:	4c0d      	ldr	r4, [pc, #52]	; (800045c <__libc_init_array+0x3c>)
 8000428:	1b64      	subs	r4, r4, r5
 800042a:	10a4      	asrs	r4, r4, #2
 800042c:	42a6      	cmp	r6, r4
 800042e:	d109      	bne.n	8000444 <__libc_init_array+0x24>
 8000430:	f001 f82c 	bl	800148c <_init>
 8000434:	2600      	movs	r6, #0
 8000436:	4d0a      	ldr	r5, [pc, #40]	; (8000460 <__libc_init_array+0x40>)
 8000438:	4c0a      	ldr	r4, [pc, #40]	; (8000464 <__libc_init_array+0x44>)
 800043a:	1b64      	subs	r4, r4, r5
 800043c:	10a4      	asrs	r4, r4, #2
 800043e:	42a6      	cmp	r6, r4
 8000440:	d105      	bne.n	800044e <__libc_init_array+0x2e>
 8000442:	bd70      	pop	{r4, r5, r6, pc}
 8000444:	f855 3b04 	ldr.w	r3, [r5], #4
 8000448:	4798      	blx	r3
 800044a:	3601      	adds	r6, #1
 800044c:	e7ee      	b.n	800042c <__libc_init_array+0xc>
 800044e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000452:	4798      	blx	r3
 8000454:	3601      	adds	r6, #1
 8000456:	e7f2      	b.n	800043e <__libc_init_array+0x1e>
 8000458:	080015a8 	.word	0x080015a8
 800045c:	080015a8 	.word	0x080015a8
 8000460:	080015a8 	.word	0x080015a8
 8000464:	080015ac 	.word	0x080015ac

08000468 <memset>:
 8000468:	4603      	mov	r3, r0
 800046a:	4402      	add	r2, r0
 800046c:	4293      	cmp	r3, r2
 800046e:	d100      	bne.n	8000472 <memset+0xa>
 8000470:	4770      	bx	lr
 8000472:	f803 1b01 	strb.w	r1, [r3], #1
 8000476:	e7f9      	b.n	800046c <memset+0x4>

08000478 <iprintf>:
 8000478:	b40f      	push	{r0, r1, r2, r3}
 800047a:	4b0a      	ldr	r3, [pc, #40]	; (80004a4 <iprintf+0x2c>)
 800047c:	b513      	push	{r0, r1, r4, lr}
 800047e:	681c      	ldr	r4, [r3, #0]
 8000480:	b124      	cbz	r4, 800048c <iprintf+0x14>
 8000482:	69a3      	ldr	r3, [r4, #24]
 8000484:	b913      	cbnz	r3, 800048c <iprintf+0x14>
 8000486:	4620      	mov	r0, r4
 8000488:	f000 fa5a 	bl	8000940 <__sinit>
 800048c:	ab05      	add	r3, sp, #20
 800048e:	4620      	mov	r0, r4
 8000490:	9a04      	ldr	r2, [sp, #16]
 8000492:	68a1      	ldr	r1, [r4, #8]
 8000494:	9301      	str	r3, [sp, #4]
 8000496:	f000 fc5d 	bl	8000d54 <_vfiprintf_r>
 800049a:	b002      	add	sp, #8
 800049c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80004a0:	b004      	add	sp, #16
 80004a2:	4770      	bx	lr
 80004a4:	20000000 	.word	0x20000000

080004a8 <_puts_r>:
 80004a8:	b570      	push	{r4, r5, r6, lr}
 80004aa:	460e      	mov	r6, r1
 80004ac:	4605      	mov	r5, r0
 80004ae:	b118      	cbz	r0, 80004b8 <_puts_r+0x10>
 80004b0:	6983      	ldr	r3, [r0, #24]
 80004b2:	b90b      	cbnz	r3, 80004b8 <_puts_r+0x10>
 80004b4:	f000 fa44 	bl	8000940 <__sinit>
 80004b8:	69ab      	ldr	r3, [r5, #24]
 80004ba:	68ac      	ldr	r4, [r5, #8]
 80004bc:	b913      	cbnz	r3, 80004c4 <_puts_r+0x1c>
 80004be:	4628      	mov	r0, r5
 80004c0:	f000 fa3e 	bl	8000940 <__sinit>
 80004c4:	4b2c      	ldr	r3, [pc, #176]	; (8000578 <_puts_r+0xd0>)
 80004c6:	429c      	cmp	r4, r3
 80004c8:	d120      	bne.n	800050c <_puts_r+0x64>
 80004ca:	686c      	ldr	r4, [r5, #4]
 80004cc:	6e63      	ldr	r3, [r4, #100]	; 0x64
 80004ce:	07db      	lsls	r3, r3, #31
 80004d0:	d405      	bmi.n	80004de <_puts_r+0x36>
 80004d2:	89a3      	ldrh	r3, [r4, #12]
 80004d4:	0598      	lsls	r0, r3, #22
 80004d6:	d402      	bmi.n	80004de <_puts_r+0x36>
 80004d8:	6da0      	ldr	r0, [r4, #88]	; 0x58
 80004da:	f000 facf 	bl	8000a7c <__retarget_lock_acquire_recursive>
 80004de:	89a3      	ldrh	r3, [r4, #12]
 80004e0:	0719      	lsls	r1, r3, #28
 80004e2:	d51d      	bpl.n	8000520 <_puts_r+0x78>
 80004e4:	6923      	ldr	r3, [r4, #16]
 80004e6:	b1db      	cbz	r3, 8000520 <_puts_r+0x78>
 80004e8:	3e01      	subs	r6, #1
 80004ea:	68a3      	ldr	r3, [r4, #8]
 80004ec:	f816 1f01 	ldrb.w	r1, [r6, #1]!
 80004f0:	3b01      	subs	r3, #1
 80004f2:	60a3      	str	r3, [r4, #8]
 80004f4:	bb39      	cbnz	r1, 8000546 <_puts_r+0x9e>
 80004f6:	2b00      	cmp	r3, #0
 80004f8:	da38      	bge.n	800056c <_puts_r+0xc4>
 80004fa:	4622      	mov	r2, r4
 80004fc:	210a      	movs	r1, #10
 80004fe:	4628      	mov	r0, r5
 8000500:	f000 f848 	bl	8000594 <__swbuf_r>
 8000504:	3001      	adds	r0, #1
 8000506:	d011      	beq.n	800052c <_puts_r+0x84>
 8000508:	250a      	movs	r5, #10
 800050a:	e011      	b.n	8000530 <_puts_r+0x88>
 800050c:	4b1b      	ldr	r3, [pc, #108]	; (800057c <_puts_r+0xd4>)
 800050e:	429c      	cmp	r4, r3
 8000510:	d101      	bne.n	8000516 <_puts_r+0x6e>
 8000512:	68ac      	ldr	r4, [r5, #8]
 8000514:	e7da      	b.n	80004cc <_puts_r+0x24>
 8000516:	4b1a      	ldr	r3, [pc, #104]	; (8000580 <_puts_r+0xd8>)
 8000518:	429c      	cmp	r4, r3
 800051a:	bf08      	it	eq
 800051c:	68ec      	ldreq	r4, [r5, #12]
 800051e:	e7d5      	b.n	80004cc <_puts_r+0x24>
 8000520:	4621      	mov	r1, r4
 8000522:	4628      	mov	r0, r5
 8000524:	f000 f888 	bl	8000638 <__swsetup_r>
 8000528:	2800      	cmp	r0, #0
 800052a:	d0dd      	beq.n	80004e8 <_puts_r+0x40>
 800052c:	f04f 35ff 	mov.w	r5, #4294967295
 8000530:	6e63      	ldr	r3, [r4, #100]	; 0x64
 8000532:	07da      	lsls	r2, r3, #31
 8000534:	d405      	bmi.n	8000542 <_puts_r+0x9a>
 8000536:	89a3      	ldrh	r3, [r4, #12]
 8000538:	059b      	lsls	r3, r3, #22
 800053a:	d402      	bmi.n	8000542 <_puts_r+0x9a>
 800053c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800053e:	f000 fa9e 	bl	8000a7e <__retarget_lock_release_recursive>
 8000542:	4628      	mov	r0, r5
 8000544:	bd70      	pop	{r4, r5, r6, pc}
 8000546:	2b00      	cmp	r3, #0
 8000548:	da04      	bge.n	8000554 <_puts_r+0xac>
 800054a:	69a2      	ldr	r2, [r4, #24]
 800054c:	429a      	cmp	r2, r3
 800054e:	dc06      	bgt.n	800055e <_puts_r+0xb6>
 8000550:	290a      	cmp	r1, #10
 8000552:	d004      	beq.n	800055e <_puts_r+0xb6>
 8000554:	6823      	ldr	r3, [r4, #0]
 8000556:	1c5a      	adds	r2, r3, #1
 8000558:	6022      	str	r2, [r4, #0]
 800055a:	7019      	strb	r1, [r3, #0]
 800055c:	e7c5      	b.n	80004ea <_puts_r+0x42>
 800055e:	4622      	mov	r2, r4
 8000560:	4628      	mov	r0, r5
 8000562:	f000 f817 	bl	8000594 <__swbuf_r>
 8000566:	3001      	adds	r0, #1
 8000568:	d1bf      	bne.n	80004ea <_puts_r+0x42>
 800056a:	e7df      	b.n	800052c <_puts_r+0x84>
 800056c:	250a      	movs	r5, #10
 800056e:	6823      	ldr	r3, [r4, #0]
 8000570:	1c5a      	adds	r2, r3, #1
 8000572:	6022      	str	r2, [r4, #0]
 8000574:	701d      	strb	r5, [r3, #0]
 8000576:	e7db      	b.n	8000530 <_puts_r+0x88>
 8000578:	08001534 	.word	0x08001534
 800057c:	08001554 	.word	0x08001554
 8000580:	08001514 	.word	0x08001514

08000584 <puts>:
 8000584:	4b02      	ldr	r3, [pc, #8]	; (8000590 <puts+0xc>)
 8000586:	4601      	mov	r1, r0
 8000588:	6818      	ldr	r0, [r3, #0]
 800058a:	f7ff bf8d 	b.w	80004a8 <_puts_r>
 800058e:	bf00      	nop
 8000590:	20000000 	.word	0x20000000

08000594 <__swbuf_r>:
 8000594:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000596:	460e      	mov	r6, r1
 8000598:	4614      	mov	r4, r2
 800059a:	4605      	mov	r5, r0
 800059c:	b118      	cbz	r0, 80005a6 <__swbuf_r+0x12>
 800059e:	6983      	ldr	r3, [r0, #24]
 80005a0:	b90b      	cbnz	r3, 80005a6 <__swbuf_r+0x12>
 80005a2:	f000 f9cd 	bl	8000940 <__sinit>
 80005a6:	4b21      	ldr	r3, [pc, #132]	; (800062c <__swbuf_r+0x98>)
 80005a8:	429c      	cmp	r4, r3
 80005aa:	d12b      	bne.n	8000604 <__swbuf_r+0x70>
 80005ac:	686c      	ldr	r4, [r5, #4]
 80005ae:	69a3      	ldr	r3, [r4, #24]
 80005b0:	60a3      	str	r3, [r4, #8]
 80005b2:	89a3      	ldrh	r3, [r4, #12]
 80005b4:	071a      	lsls	r2, r3, #28
 80005b6:	d52f      	bpl.n	8000618 <__swbuf_r+0x84>
 80005b8:	6923      	ldr	r3, [r4, #16]
 80005ba:	b36b      	cbz	r3, 8000618 <__swbuf_r+0x84>
 80005bc:	6923      	ldr	r3, [r4, #16]
 80005be:	6820      	ldr	r0, [r4, #0]
 80005c0:	b2f6      	uxtb	r6, r6
 80005c2:	1ac0      	subs	r0, r0, r3
 80005c4:	6963      	ldr	r3, [r4, #20]
 80005c6:	4637      	mov	r7, r6
 80005c8:	4283      	cmp	r3, r0
 80005ca:	dc04      	bgt.n	80005d6 <__swbuf_r+0x42>
 80005cc:	4621      	mov	r1, r4
 80005ce:	4628      	mov	r0, r5
 80005d0:	f000 f922 	bl	8000818 <_fflush_r>
 80005d4:	bb30      	cbnz	r0, 8000624 <__swbuf_r+0x90>
 80005d6:	68a3      	ldr	r3, [r4, #8]
 80005d8:	3001      	adds	r0, #1
 80005da:	3b01      	subs	r3, #1
 80005dc:	60a3      	str	r3, [r4, #8]
 80005de:	6823      	ldr	r3, [r4, #0]
 80005e0:	1c5a      	adds	r2, r3, #1
 80005e2:	6022      	str	r2, [r4, #0]
 80005e4:	701e      	strb	r6, [r3, #0]
 80005e6:	6963      	ldr	r3, [r4, #20]
 80005e8:	4283      	cmp	r3, r0
 80005ea:	d004      	beq.n	80005f6 <__swbuf_r+0x62>
 80005ec:	89a3      	ldrh	r3, [r4, #12]
 80005ee:	07db      	lsls	r3, r3, #31
 80005f0:	d506      	bpl.n	8000600 <__swbuf_r+0x6c>
 80005f2:	2e0a      	cmp	r6, #10
 80005f4:	d104      	bne.n	8000600 <__swbuf_r+0x6c>
 80005f6:	4621      	mov	r1, r4
 80005f8:	4628      	mov	r0, r5
 80005fa:	f000 f90d 	bl	8000818 <_fflush_r>
 80005fe:	b988      	cbnz	r0, 8000624 <__swbuf_r+0x90>
 8000600:	4638      	mov	r0, r7
 8000602:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000604:	4b0a      	ldr	r3, [pc, #40]	; (8000630 <__swbuf_r+0x9c>)
 8000606:	429c      	cmp	r4, r3
 8000608:	d101      	bne.n	800060e <__swbuf_r+0x7a>
 800060a:	68ac      	ldr	r4, [r5, #8]
 800060c:	e7cf      	b.n	80005ae <__swbuf_r+0x1a>
 800060e:	4b09      	ldr	r3, [pc, #36]	; (8000634 <__swbuf_r+0xa0>)
 8000610:	429c      	cmp	r4, r3
 8000612:	bf08      	it	eq
 8000614:	68ec      	ldreq	r4, [r5, #12]
 8000616:	e7ca      	b.n	80005ae <__swbuf_r+0x1a>
 8000618:	4621      	mov	r1, r4
 800061a:	4628      	mov	r0, r5
 800061c:	f000 f80c 	bl	8000638 <__swsetup_r>
 8000620:	2800      	cmp	r0, #0
 8000622:	d0cb      	beq.n	80005bc <__swbuf_r+0x28>
 8000624:	f04f 37ff 	mov.w	r7, #4294967295
 8000628:	e7ea      	b.n	8000600 <__swbuf_r+0x6c>
 800062a:	bf00      	nop
 800062c:	08001534 	.word	0x08001534
 8000630:	08001554 	.word	0x08001554
 8000634:	08001514 	.word	0x08001514

08000638 <__swsetup_r>:
 8000638:	4b32      	ldr	r3, [pc, #200]	; (8000704 <__swsetup_r+0xcc>)
 800063a:	b570      	push	{r4, r5, r6, lr}
 800063c:	681d      	ldr	r5, [r3, #0]
 800063e:	4606      	mov	r6, r0
 8000640:	460c      	mov	r4, r1
 8000642:	b125      	cbz	r5, 800064e <__swsetup_r+0x16>
 8000644:	69ab      	ldr	r3, [r5, #24]
 8000646:	b913      	cbnz	r3, 800064e <__swsetup_r+0x16>
 8000648:	4628      	mov	r0, r5
 800064a:	f000 f979 	bl	8000940 <__sinit>
 800064e:	4b2e      	ldr	r3, [pc, #184]	; (8000708 <__swsetup_r+0xd0>)
 8000650:	429c      	cmp	r4, r3
 8000652:	d10f      	bne.n	8000674 <__swsetup_r+0x3c>
 8000654:	686c      	ldr	r4, [r5, #4]
 8000656:	89a3      	ldrh	r3, [r4, #12]
 8000658:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 800065c:	0719      	lsls	r1, r3, #28
 800065e:	d42c      	bmi.n	80006ba <__swsetup_r+0x82>
 8000660:	06dd      	lsls	r5, r3, #27
 8000662:	d411      	bmi.n	8000688 <__swsetup_r+0x50>
 8000664:	2309      	movs	r3, #9
 8000666:	6033      	str	r3, [r6, #0]
 8000668:	f042 0340 	orr.w	r3, r2, #64	; 0x40
 800066c:	f04f 30ff 	mov.w	r0, #4294967295
 8000670:	81a3      	strh	r3, [r4, #12]
 8000672:	e03e      	b.n	80006f2 <__swsetup_r+0xba>
 8000674:	4b25      	ldr	r3, [pc, #148]	; (800070c <__swsetup_r+0xd4>)
 8000676:	429c      	cmp	r4, r3
 8000678:	d101      	bne.n	800067e <__swsetup_r+0x46>
 800067a:	68ac      	ldr	r4, [r5, #8]
 800067c:	e7eb      	b.n	8000656 <__swsetup_r+0x1e>
 800067e:	4b24      	ldr	r3, [pc, #144]	; (8000710 <__swsetup_r+0xd8>)
 8000680:	429c      	cmp	r4, r3
 8000682:	bf08      	it	eq
 8000684:	68ec      	ldreq	r4, [r5, #12]
 8000686:	e7e6      	b.n	8000656 <__swsetup_r+0x1e>
 8000688:	0758      	lsls	r0, r3, #29
 800068a:	d512      	bpl.n	80006b2 <__swsetup_r+0x7a>
 800068c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800068e:	b141      	cbz	r1, 80006a2 <__swsetup_r+0x6a>
 8000690:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000694:	4299      	cmp	r1, r3
 8000696:	d002      	beq.n	800069e <__swsetup_r+0x66>
 8000698:	4630      	mov	r0, r6
 800069a:	f000 fa57 	bl	8000b4c <_free_r>
 800069e:	2300      	movs	r3, #0
 80006a0:	6363      	str	r3, [r4, #52]	; 0x34
 80006a2:	89a3      	ldrh	r3, [r4, #12]
 80006a4:	f023 0324 	bic.w	r3, r3, #36	; 0x24
 80006a8:	81a3      	strh	r3, [r4, #12]
 80006aa:	2300      	movs	r3, #0
 80006ac:	6063      	str	r3, [r4, #4]
 80006ae:	6923      	ldr	r3, [r4, #16]
 80006b0:	6023      	str	r3, [r4, #0]
 80006b2:	89a3      	ldrh	r3, [r4, #12]
 80006b4:	f043 0308 	orr.w	r3, r3, #8
 80006b8:	81a3      	strh	r3, [r4, #12]
 80006ba:	6923      	ldr	r3, [r4, #16]
 80006bc:	b94b      	cbnz	r3, 80006d2 <__swsetup_r+0x9a>
 80006be:	89a3      	ldrh	r3, [r4, #12]
 80006c0:	f403 7320 	and.w	r3, r3, #640	; 0x280
 80006c4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 80006c8:	d003      	beq.n	80006d2 <__swsetup_r+0x9a>
 80006ca:	4621      	mov	r1, r4
 80006cc:	4630      	mov	r0, r6
 80006ce:	f000 f9fd 	bl	8000acc <__smakebuf_r>
 80006d2:	89a0      	ldrh	r0, [r4, #12]
 80006d4:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 80006d8:	f010 0301 	ands.w	r3, r0, #1
 80006dc:	d00a      	beq.n	80006f4 <__swsetup_r+0xbc>
 80006de:	2300      	movs	r3, #0
 80006e0:	60a3      	str	r3, [r4, #8]
 80006e2:	6963      	ldr	r3, [r4, #20]
 80006e4:	425b      	negs	r3, r3
 80006e6:	61a3      	str	r3, [r4, #24]
 80006e8:	6923      	ldr	r3, [r4, #16]
 80006ea:	b943      	cbnz	r3, 80006fe <__swsetup_r+0xc6>
 80006ec:	f010 0080 	ands.w	r0, r0, #128	; 0x80
 80006f0:	d1ba      	bne.n	8000668 <__swsetup_r+0x30>
 80006f2:	bd70      	pop	{r4, r5, r6, pc}
 80006f4:	0781      	lsls	r1, r0, #30
 80006f6:	bf58      	it	pl
 80006f8:	6963      	ldrpl	r3, [r4, #20]
 80006fa:	60a3      	str	r3, [r4, #8]
 80006fc:	e7f4      	b.n	80006e8 <__swsetup_r+0xb0>
 80006fe:	2000      	movs	r0, #0
 8000700:	e7f7      	b.n	80006f2 <__swsetup_r+0xba>
 8000702:	bf00      	nop
 8000704:	20000000 	.word	0x20000000
 8000708:	08001534 	.word	0x08001534
 800070c:	08001554 	.word	0x08001554
 8000710:	08001514 	.word	0x08001514

08000714 <__sflush_r>:
 8000714:	898a      	ldrh	r2, [r1, #12]
 8000716:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000718:	4605      	mov	r5, r0
 800071a:	0710      	lsls	r0, r2, #28
 800071c:	460c      	mov	r4, r1
 800071e:	d457      	bmi.n	80007d0 <__sflush_r+0xbc>
 8000720:	684b      	ldr	r3, [r1, #4]
 8000722:	2b00      	cmp	r3, #0
 8000724:	dc04      	bgt.n	8000730 <__sflush_r+0x1c>
 8000726:	6c0b      	ldr	r3, [r1, #64]	; 0x40
 8000728:	2b00      	cmp	r3, #0
 800072a:	dc01      	bgt.n	8000730 <__sflush_r+0x1c>
 800072c:	2000      	movs	r0, #0
 800072e:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000730:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 8000732:	2e00      	cmp	r6, #0
 8000734:	d0fa      	beq.n	800072c <__sflush_r+0x18>
 8000736:	2300      	movs	r3, #0
 8000738:	f412 5280 	ands.w	r2, r2, #4096	; 0x1000
 800073c:	682f      	ldr	r7, [r5, #0]
 800073e:	602b      	str	r3, [r5, #0]
 8000740:	d032      	beq.n	80007a8 <__sflush_r+0x94>
 8000742:	6d60      	ldr	r0, [r4, #84]	; 0x54
 8000744:	89a3      	ldrh	r3, [r4, #12]
 8000746:	075a      	lsls	r2, r3, #29
 8000748:	d505      	bpl.n	8000756 <__sflush_r+0x42>
 800074a:	6863      	ldr	r3, [r4, #4]
 800074c:	1ac0      	subs	r0, r0, r3
 800074e:	6b63      	ldr	r3, [r4, #52]	; 0x34
 8000750:	b10b      	cbz	r3, 8000756 <__sflush_r+0x42>
 8000752:	6c23      	ldr	r3, [r4, #64]	; 0x40
 8000754:	1ac0      	subs	r0, r0, r3
 8000756:	2300      	movs	r3, #0
 8000758:	4602      	mov	r2, r0
 800075a:	6ae6      	ldr	r6, [r4, #44]	; 0x2c
 800075c:	4628      	mov	r0, r5
 800075e:	6a21      	ldr	r1, [r4, #32]
 8000760:	47b0      	blx	r6
 8000762:	1c43      	adds	r3, r0, #1
 8000764:	89a3      	ldrh	r3, [r4, #12]
 8000766:	d106      	bne.n	8000776 <__sflush_r+0x62>
 8000768:	6829      	ldr	r1, [r5, #0]
 800076a:	291d      	cmp	r1, #29
 800076c:	d82c      	bhi.n	80007c8 <__sflush_r+0xb4>
 800076e:	4a29      	ldr	r2, [pc, #164]	; (8000814 <__sflush_r+0x100>)
 8000770:	40ca      	lsrs	r2, r1
 8000772:	07d6      	lsls	r6, r2, #31
 8000774:	d528      	bpl.n	80007c8 <__sflush_r+0xb4>
 8000776:	2200      	movs	r2, #0
 8000778:	6062      	str	r2, [r4, #4]
 800077a:	6922      	ldr	r2, [r4, #16]
 800077c:	04d9      	lsls	r1, r3, #19
 800077e:	6022      	str	r2, [r4, #0]
 8000780:	d504      	bpl.n	800078c <__sflush_r+0x78>
 8000782:	1c42      	adds	r2, r0, #1
 8000784:	d101      	bne.n	800078a <__sflush_r+0x76>
 8000786:	682b      	ldr	r3, [r5, #0]
 8000788:	b903      	cbnz	r3, 800078c <__sflush_r+0x78>
 800078a:	6560      	str	r0, [r4, #84]	; 0x54
 800078c:	6b61      	ldr	r1, [r4, #52]	; 0x34
 800078e:	602f      	str	r7, [r5, #0]
 8000790:	2900      	cmp	r1, #0
 8000792:	d0cb      	beq.n	800072c <__sflush_r+0x18>
 8000794:	f104 0344 	add.w	r3, r4, #68	; 0x44
 8000798:	4299      	cmp	r1, r3
 800079a:	d002      	beq.n	80007a2 <__sflush_r+0x8e>
 800079c:	4628      	mov	r0, r5
 800079e:	f000 f9d5 	bl	8000b4c <_free_r>
 80007a2:	2000      	movs	r0, #0
 80007a4:	6360      	str	r0, [r4, #52]	; 0x34
 80007a6:	e7c2      	b.n	800072e <__sflush_r+0x1a>
 80007a8:	6a21      	ldr	r1, [r4, #32]
 80007aa:	2301      	movs	r3, #1
 80007ac:	4628      	mov	r0, r5
 80007ae:	47b0      	blx	r6
 80007b0:	1c41      	adds	r1, r0, #1
 80007b2:	d1c7      	bne.n	8000744 <__sflush_r+0x30>
 80007b4:	682b      	ldr	r3, [r5, #0]
 80007b6:	2b00      	cmp	r3, #0
 80007b8:	d0c4      	beq.n	8000744 <__sflush_r+0x30>
 80007ba:	2b1d      	cmp	r3, #29
 80007bc:	d001      	beq.n	80007c2 <__sflush_r+0xae>
 80007be:	2b16      	cmp	r3, #22
 80007c0:	d101      	bne.n	80007c6 <__sflush_r+0xb2>
 80007c2:	602f      	str	r7, [r5, #0]
 80007c4:	e7b2      	b.n	800072c <__sflush_r+0x18>
 80007c6:	89a3      	ldrh	r3, [r4, #12]
 80007c8:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80007cc:	81a3      	strh	r3, [r4, #12]
 80007ce:	e7ae      	b.n	800072e <__sflush_r+0x1a>
 80007d0:	690f      	ldr	r7, [r1, #16]
 80007d2:	2f00      	cmp	r7, #0
 80007d4:	d0aa      	beq.n	800072c <__sflush_r+0x18>
 80007d6:	0793      	lsls	r3, r2, #30
 80007d8:	bf18      	it	ne
 80007da:	2300      	movne	r3, #0
 80007dc:	680e      	ldr	r6, [r1, #0]
 80007de:	bf08      	it	eq
 80007e0:	694b      	ldreq	r3, [r1, #20]
 80007e2:	1bf6      	subs	r6, r6, r7
 80007e4:	600f      	str	r7, [r1, #0]
 80007e6:	608b      	str	r3, [r1, #8]
 80007e8:	2e00      	cmp	r6, #0
 80007ea:	dd9f      	ble.n	800072c <__sflush_r+0x18>
 80007ec:	4633      	mov	r3, r6
 80007ee:	463a      	mov	r2, r7
 80007f0:	4628      	mov	r0, r5
 80007f2:	6a21      	ldr	r1, [r4, #32]
 80007f4:	f8d4 c028 	ldr.w	ip, [r4, #40]	; 0x28
 80007f8:	47e0      	blx	ip
 80007fa:	2800      	cmp	r0, #0
 80007fc:	dc06      	bgt.n	800080c <__sflush_r+0xf8>
 80007fe:	89a3      	ldrh	r3, [r4, #12]
 8000800:	f04f 30ff 	mov.w	r0, #4294967295
 8000804:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8000808:	81a3      	strh	r3, [r4, #12]
 800080a:	e790      	b.n	800072e <__sflush_r+0x1a>
 800080c:	4407      	add	r7, r0
 800080e:	1a36      	subs	r6, r6, r0
 8000810:	e7ea      	b.n	80007e8 <__sflush_r+0xd4>
 8000812:	bf00      	nop
 8000814:	20400001 	.word	0x20400001

08000818 <_fflush_r>:
 8000818:	b538      	push	{r3, r4, r5, lr}
 800081a:	690b      	ldr	r3, [r1, #16]
 800081c:	4605      	mov	r5, r0
 800081e:	460c      	mov	r4, r1
 8000820:	b913      	cbnz	r3, 8000828 <_fflush_r+0x10>
 8000822:	2500      	movs	r5, #0
 8000824:	4628      	mov	r0, r5
 8000826:	bd38      	pop	{r3, r4, r5, pc}
 8000828:	b118      	cbz	r0, 8000832 <_fflush_r+0x1a>
 800082a:	6983      	ldr	r3, [r0, #24]
 800082c:	b90b      	cbnz	r3, 8000832 <_fflush_r+0x1a>
 800082e:	f000 f887 	bl	8000940 <__sinit>
 8000832:	4b14      	ldr	r3, [pc, #80]	; (8000884 <_fflush_r+0x6c>)
 8000834:	429c      	cmp	r4, r3
 8000836:	d11b      	bne.n	8000870 <_fflush_r+0x58>
 8000838:	686c      	ldr	r4, [r5, #4]
 800083a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 800083e:	2b00      	cmp	r3, #0
 8000840:	d0ef      	beq.n	8000822 <_fflush_r+0xa>
 8000842:	6e62      	ldr	r2, [r4, #100]	; 0x64
 8000844:	07d0      	lsls	r0, r2, #31
 8000846:	d404      	bmi.n	8000852 <_fflush_r+0x3a>
 8000848:	0599      	lsls	r1, r3, #22
 800084a:	d402      	bmi.n	8000852 <_fflush_r+0x3a>
 800084c:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800084e:	f000 f915 	bl	8000a7c <__retarget_lock_acquire_recursive>
 8000852:	4628      	mov	r0, r5
 8000854:	4621      	mov	r1, r4
 8000856:	f7ff ff5d 	bl	8000714 <__sflush_r>
 800085a:	6e63      	ldr	r3, [r4, #100]	; 0x64
 800085c:	4605      	mov	r5, r0
 800085e:	07da      	lsls	r2, r3, #31
 8000860:	d4e0      	bmi.n	8000824 <_fflush_r+0xc>
 8000862:	89a3      	ldrh	r3, [r4, #12]
 8000864:	059b      	lsls	r3, r3, #22
 8000866:	d4dd      	bmi.n	8000824 <_fflush_r+0xc>
 8000868:	6da0      	ldr	r0, [r4, #88]	; 0x58
 800086a:	f000 f908 	bl	8000a7e <__retarget_lock_release_recursive>
 800086e:	e7d9      	b.n	8000824 <_fflush_r+0xc>
 8000870:	4b05      	ldr	r3, [pc, #20]	; (8000888 <_fflush_r+0x70>)
 8000872:	429c      	cmp	r4, r3
 8000874:	d101      	bne.n	800087a <_fflush_r+0x62>
 8000876:	68ac      	ldr	r4, [r5, #8]
 8000878:	e7df      	b.n	800083a <_fflush_r+0x22>
 800087a:	4b04      	ldr	r3, [pc, #16]	; (800088c <_fflush_r+0x74>)
 800087c:	429c      	cmp	r4, r3
 800087e:	bf08      	it	eq
 8000880:	68ec      	ldreq	r4, [r5, #12]
 8000882:	e7da      	b.n	800083a <_fflush_r+0x22>
 8000884:	08001534 	.word	0x08001534
 8000888:	08001554 	.word	0x08001554
 800088c:	08001514 	.word	0x08001514

08000890 <std>:
 8000890:	2300      	movs	r3, #0
 8000892:	b510      	push	{r4, lr}
 8000894:	4604      	mov	r4, r0
 8000896:	e9c0 3300 	strd	r3, r3, [r0]
 800089a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 800089e:	6083      	str	r3, [r0, #8]
 80008a0:	8181      	strh	r1, [r0, #12]
 80008a2:	6643      	str	r3, [r0, #100]	; 0x64
 80008a4:	81c2      	strh	r2, [r0, #14]
 80008a6:	6183      	str	r3, [r0, #24]
 80008a8:	4619      	mov	r1, r3
 80008aa:	2208      	movs	r2, #8
 80008ac:	305c      	adds	r0, #92	; 0x5c
 80008ae:	f7ff fddb 	bl	8000468 <memset>
 80008b2:	4b05      	ldr	r3, [pc, #20]	; (80008c8 <std+0x38>)
 80008b4:	6224      	str	r4, [r4, #32]
 80008b6:	6263      	str	r3, [r4, #36]	; 0x24
 80008b8:	4b04      	ldr	r3, [pc, #16]	; (80008cc <std+0x3c>)
 80008ba:	62a3      	str	r3, [r4, #40]	; 0x28
 80008bc:	4b04      	ldr	r3, [pc, #16]	; (80008d0 <std+0x40>)
 80008be:	62e3      	str	r3, [r4, #44]	; 0x2c
 80008c0:	4b04      	ldr	r3, [pc, #16]	; (80008d4 <std+0x44>)
 80008c2:	6323      	str	r3, [r4, #48]	; 0x30
 80008c4:	bd10      	pop	{r4, pc}
 80008c6:	bf00      	nop
 80008c8:	08001301 	.word	0x08001301
 80008cc:	08001323 	.word	0x08001323
 80008d0:	0800135b 	.word	0x0800135b
 80008d4:	0800137f 	.word	0x0800137f

080008d8 <_cleanup_r>:
 80008d8:	4901      	ldr	r1, [pc, #4]	; (80008e0 <_cleanup_r+0x8>)
 80008da:	f000 b8af 	b.w	8000a3c <_fwalk_reent>
 80008de:	bf00      	nop
 80008e0:	08000819 	.word	0x08000819

080008e4 <__sfmoreglue>:
 80008e4:	2268      	movs	r2, #104	; 0x68
 80008e6:	b570      	push	{r4, r5, r6, lr}
 80008e8:	1e4d      	subs	r5, r1, #1
 80008ea:	4355      	muls	r5, r2
 80008ec:	460e      	mov	r6, r1
 80008ee:	f105 0174 	add.w	r1, r5, #116	; 0x74
 80008f2:	f000 f993 	bl	8000c1c <_malloc_r>
 80008f6:	4604      	mov	r4, r0
 80008f8:	b140      	cbz	r0, 800090c <__sfmoreglue+0x28>
 80008fa:	2100      	movs	r1, #0
 80008fc:	e9c0 1600 	strd	r1, r6, [r0]
 8000900:	300c      	adds	r0, #12
 8000902:	60a0      	str	r0, [r4, #8]
 8000904:	f105 0268 	add.w	r2, r5, #104	; 0x68
 8000908:	f7ff fdae 	bl	8000468 <memset>
 800090c:	4620      	mov	r0, r4
 800090e:	bd70      	pop	{r4, r5, r6, pc}

08000910 <__sfp_lock_acquire>:
 8000910:	4801      	ldr	r0, [pc, #4]	; (8000918 <__sfp_lock_acquire+0x8>)
 8000912:	f000 b8b3 	b.w	8000a7c <__retarget_lock_acquire_recursive>
 8000916:	bf00      	nop
 8000918:	20000085 	.word	0x20000085

0800091c <__sfp_lock_release>:
 800091c:	4801      	ldr	r0, [pc, #4]	; (8000924 <__sfp_lock_release+0x8>)
 800091e:	f000 b8ae 	b.w	8000a7e <__retarget_lock_release_recursive>
 8000922:	bf00      	nop
 8000924:	20000085 	.word	0x20000085

08000928 <__sinit_lock_acquire>:
 8000928:	4801      	ldr	r0, [pc, #4]	; (8000930 <__sinit_lock_acquire+0x8>)
 800092a:	f000 b8a7 	b.w	8000a7c <__retarget_lock_acquire_recursive>
 800092e:	bf00      	nop
 8000930:	20000086 	.word	0x20000086

08000934 <__sinit_lock_release>:
 8000934:	4801      	ldr	r0, [pc, #4]	; (800093c <__sinit_lock_release+0x8>)
 8000936:	f000 b8a2 	b.w	8000a7e <__retarget_lock_release_recursive>
 800093a:	bf00      	nop
 800093c:	20000086 	.word	0x20000086

08000940 <__sinit>:
 8000940:	b510      	push	{r4, lr}
 8000942:	4604      	mov	r4, r0
 8000944:	f7ff fff0 	bl	8000928 <__sinit_lock_acquire>
 8000948:	69a3      	ldr	r3, [r4, #24]
 800094a:	b11b      	cbz	r3, 8000954 <__sinit+0x14>
 800094c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8000950:	f7ff bff0 	b.w	8000934 <__sinit_lock_release>
 8000954:	e9c4 3312 	strd	r3, r3, [r4, #72]	; 0x48
 8000958:	6523      	str	r3, [r4, #80]	; 0x50
 800095a:	4b13      	ldr	r3, [pc, #76]	; (80009a8 <__sinit+0x68>)
 800095c:	4a13      	ldr	r2, [pc, #76]	; (80009ac <__sinit+0x6c>)
 800095e:	681b      	ldr	r3, [r3, #0]
 8000960:	62a2      	str	r2, [r4, #40]	; 0x28
 8000962:	42a3      	cmp	r3, r4
 8000964:	bf08      	it	eq
 8000966:	2301      	moveq	r3, #1
 8000968:	4620      	mov	r0, r4
 800096a:	bf08      	it	eq
 800096c:	61a3      	streq	r3, [r4, #24]
 800096e:	f000 f81f 	bl	80009b0 <__sfp>
 8000972:	6060      	str	r0, [r4, #4]
 8000974:	4620      	mov	r0, r4
 8000976:	f000 f81b 	bl	80009b0 <__sfp>
 800097a:	60a0      	str	r0, [r4, #8]
 800097c:	4620      	mov	r0, r4
 800097e:	f000 f817 	bl	80009b0 <__sfp>
 8000982:	2200      	movs	r2, #0
 8000984:	2104      	movs	r1, #4
 8000986:	60e0      	str	r0, [r4, #12]
 8000988:	6860      	ldr	r0, [r4, #4]
 800098a:	f7ff ff81 	bl	8000890 <std>
 800098e:	2201      	movs	r2, #1
 8000990:	2109      	movs	r1, #9
 8000992:	68a0      	ldr	r0, [r4, #8]
 8000994:	f7ff ff7c 	bl	8000890 <std>
 8000998:	2202      	movs	r2, #2
 800099a:	2112      	movs	r1, #18
 800099c:	68e0      	ldr	r0, [r4, #12]
 800099e:	f7ff ff77 	bl	8000890 <std>
 80009a2:	2301      	movs	r3, #1
 80009a4:	61a3      	str	r3, [r4, #24]
 80009a6:	e7d1      	b.n	800094c <__sinit+0xc>
 80009a8:	08001510 	.word	0x08001510
 80009ac:	080008d9 	.word	0x080008d9

080009b0 <__sfp>:
 80009b0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80009b2:	4607      	mov	r7, r0
 80009b4:	f7ff ffac 	bl	8000910 <__sfp_lock_acquire>
 80009b8:	4b1e      	ldr	r3, [pc, #120]	; (8000a34 <__sfp+0x84>)
 80009ba:	681e      	ldr	r6, [r3, #0]
 80009bc:	69b3      	ldr	r3, [r6, #24]
 80009be:	b913      	cbnz	r3, 80009c6 <__sfp+0x16>
 80009c0:	4630      	mov	r0, r6
 80009c2:	f7ff ffbd 	bl	8000940 <__sinit>
 80009c6:	3648      	adds	r6, #72	; 0x48
 80009c8:	e9d6 3401 	ldrd	r3, r4, [r6, #4]
 80009cc:	3b01      	subs	r3, #1
 80009ce:	d503      	bpl.n	80009d8 <__sfp+0x28>
 80009d0:	6833      	ldr	r3, [r6, #0]
 80009d2:	b30b      	cbz	r3, 8000a18 <__sfp+0x68>
 80009d4:	6836      	ldr	r6, [r6, #0]
 80009d6:	e7f7      	b.n	80009c8 <__sfp+0x18>
 80009d8:	f9b4 500c 	ldrsh.w	r5, [r4, #12]
 80009dc:	b9d5      	cbnz	r5, 8000a14 <__sfp+0x64>
 80009de:	4b16      	ldr	r3, [pc, #88]	; (8000a38 <__sfp+0x88>)
 80009e0:	f104 0058 	add.w	r0, r4, #88	; 0x58
 80009e4:	60e3      	str	r3, [r4, #12]
 80009e6:	6665      	str	r5, [r4, #100]	; 0x64
 80009e8:	f000 f847 	bl	8000a7a <__retarget_lock_init_recursive>
 80009ec:	f7ff ff96 	bl	800091c <__sfp_lock_release>
 80009f0:	2208      	movs	r2, #8
 80009f2:	4629      	mov	r1, r5
 80009f4:	e9c4 5501 	strd	r5, r5, [r4, #4]
 80009f8:	e9c4 5504 	strd	r5, r5, [r4, #16]
 80009fc:	6025      	str	r5, [r4, #0]
 80009fe:	61a5      	str	r5, [r4, #24]
 8000a00:	f104 005c 	add.w	r0, r4, #92	; 0x5c
 8000a04:	f7ff fd30 	bl	8000468 <memset>
 8000a08:	e9c4 550d 	strd	r5, r5, [r4, #52]	; 0x34
 8000a0c:	e9c4 5512 	strd	r5, r5, [r4, #72]	; 0x48
 8000a10:	4620      	mov	r0, r4
 8000a12:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8000a14:	3468      	adds	r4, #104	; 0x68
 8000a16:	e7d9      	b.n	80009cc <__sfp+0x1c>
 8000a18:	2104      	movs	r1, #4
 8000a1a:	4638      	mov	r0, r7
 8000a1c:	f7ff ff62 	bl	80008e4 <__sfmoreglue>
 8000a20:	4604      	mov	r4, r0
 8000a22:	6030      	str	r0, [r6, #0]
 8000a24:	2800      	cmp	r0, #0
 8000a26:	d1d5      	bne.n	80009d4 <__sfp+0x24>
 8000a28:	f7ff ff78 	bl	800091c <__sfp_lock_release>
 8000a2c:	230c      	movs	r3, #12
 8000a2e:	603b      	str	r3, [r7, #0]
 8000a30:	e7ee      	b.n	8000a10 <__sfp+0x60>
 8000a32:	bf00      	nop
 8000a34:	08001510 	.word	0x08001510
 8000a38:	ffff0001 	.word	0xffff0001

08000a3c <_fwalk_reent>:
 8000a3c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8000a40:	4606      	mov	r6, r0
 8000a42:	4688      	mov	r8, r1
 8000a44:	2700      	movs	r7, #0
 8000a46:	f100 0448 	add.w	r4, r0, #72	; 0x48
 8000a4a:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 8000a4e:	f1b9 0901 	subs.w	r9, r9, #1
 8000a52:	d505      	bpl.n	8000a60 <_fwalk_reent+0x24>
 8000a54:	6824      	ldr	r4, [r4, #0]
 8000a56:	2c00      	cmp	r4, #0
 8000a58:	d1f7      	bne.n	8000a4a <_fwalk_reent+0xe>
 8000a5a:	4638      	mov	r0, r7
 8000a5c:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8000a60:	89ab      	ldrh	r3, [r5, #12]
 8000a62:	2b01      	cmp	r3, #1
 8000a64:	d907      	bls.n	8000a76 <_fwalk_reent+0x3a>
 8000a66:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 8000a6a:	3301      	adds	r3, #1
 8000a6c:	d003      	beq.n	8000a76 <_fwalk_reent+0x3a>
 8000a6e:	4629      	mov	r1, r5
 8000a70:	4630      	mov	r0, r6
 8000a72:	47c0      	blx	r8
 8000a74:	4307      	orrs	r7, r0
 8000a76:	3568      	adds	r5, #104	; 0x68
 8000a78:	e7e9      	b.n	8000a4e <_fwalk_reent+0x12>

08000a7a <__retarget_lock_init_recursive>:
 8000a7a:	4770      	bx	lr

08000a7c <__retarget_lock_acquire_recursive>:
 8000a7c:	4770      	bx	lr

08000a7e <__retarget_lock_release_recursive>:
 8000a7e:	4770      	bx	lr

08000a80 <__swhatbuf_r>:
 8000a80:	b570      	push	{r4, r5, r6, lr}
 8000a82:	460e      	mov	r6, r1
 8000a84:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8000a88:	4614      	mov	r4, r2
 8000a8a:	2900      	cmp	r1, #0
 8000a8c:	461d      	mov	r5, r3
 8000a8e:	b096      	sub	sp, #88	; 0x58
 8000a90:	da08      	bge.n	8000aa4 <__swhatbuf_r+0x24>
 8000a92:	2200      	movs	r2, #0
 8000a94:	f9b6 300c 	ldrsh.w	r3, [r6, #12]
 8000a98:	602a      	str	r2, [r5, #0]
 8000a9a:	061a      	lsls	r2, r3, #24
 8000a9c:	d410      	bmi.n	8000ac0 <__swhatbuf_r+0x40>
 8000a9e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8000aa2:	e00e      	b.n	8000ac2 <__swhatbuf_r+0x42>
 8000aa4:	466a      	mov	r2, sp
 8000aa6:	f000 fc91 	bl	80013cc <_fstat_r>
 8000aaa:	2800      	cmp	r0, #0
 8000aac:	dbf1      	blt.n	8000a92 <__swhatbuf_r+0x12>
 8000aae:	9a01      	ldr	r2, [sp, #4]
 8000ab0:	f402 4270 	and.w	r2, r2, #61440	; 0xf000
 8000ab4:	f5a2 5300 	sub.w	r3, r2, #8192	; 0x2000
 8000ab8:	425a      	negs	r2, r3
 8000aba:	415a      	adcs	r2, r3
 8000abc:	602a      	str	r2, [r5, #0]
 8000abe:	e7ee      	b.n	8000a9e <__swhatbuf_r+0x1e>
 8000ac0:	2340      	movs	r3, #64	; 0x40
 8000ac2:	2000      	movs	r0, #0
 8000ac4:	6023      	str	r3, [r4, #0]
 8000ac6:	b016      	add	sp, #88	; 0x58
 8000ac8:	bd70      	pop	{r4, r5, r6, pc}
	...

08000acc <__smakebuf_r>:
 8000acc:	898b      	ldrh	r3, [r1, #12]
 8000ace:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8000ad0:	079d      	lsls	r5, r3, #30
 8000ad2:	4606      	mov	r6, r0
 8000ad4:	460c      	mov	r4, r1
 8000ad6:	d507      	bpl.n	8000ae8 <__smakebuf_r+0x1c>
 8000ad8:	f104 0347 	add.w	r3, r4, #71	; 0x47
 8000adc:	6023      	str	r3, [r4, #0]
 8000ade:	6123      	str	r3, [r4, #16]
 8000ae0:	2301      	movs	r3, #1
 8000ae2:	6163      	str	r3, [r4, #20]
 8000ae4:	b002      	add	sp, #8
 8000ae6:	bd70      	pop	{r4, r5, r6, pc}
 8000ae8:	466a      	mov	r2, sp
 8000aea:	ab01      	add	r3, sp, #4
 8000aec:	f7ff ffc8 	bl	8000a80 <__swhatbuf_r>
 8000af0:	9900      	ldr	r1, [sp, #0]
 8000af2:	4605      	mov	r5, r0
 8000af4:	4630      	mov	r0, r6
 8000af6:	f000 f891 	bl	8000c1c <_malloc_r>
 8000afa:	b948      	cbnz	r0, 8000b10 <__smakebuf_r+0x44>
 8000afc:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8000b00:	059a      	lsls	r2, r3, #22
 8000b02:	d4ef      	bmi.n	8000ae4 <__smakebuf_r+0x18>
 8000b04:	f023 0303 	bic.w	r3, r3, #3
 8000b08:	f043 0302 	orr.w	r3, r3, #2
 8000b0c:	81a3      	strh	r3, [r4, #12]
 8000b0e:	e7e3      	b.n	8000ad8 <__smakebuf_r+0xc>
 8000b10:	4b0d      	ldr	r3, [pc, #52]	; (8000b48 <__smakebuf_r+0x7c>)
 8000b12:	62b3      	str	r3, [r6, #40]	; 0x28
 8000b14:	89a3      	ldrh	r3, [r4, #12]
 8000b16:	6020      	str	r0, [r4, #0]
 8000b18:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8000b1c:	81a3      	strh	r3, [r4, #12]
 8000b1e:	9b00      	ldr	r3, [sp, #0]
 8000b20:	6120      	str	r0, [r4, #16]
 8000b22:	6163      	str	r3, [r4, #20]
 8000b24:	9b01      	ldr	r3, [sp, #4]
 8000b26:	b15b      	cbz	r3, 8000b40 <__smakebuf_r+0x74>
 8000b28:	4630      	mov	r0, r6
 8000b2a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8000b2e:	f000 fc5f 	bl	80013f0 <_isatty_r>
 8000b32:	b128      	cbz	r0, 8000b40 <__smakebuf_r+0x74>
 8000b34:	89a3      	ldrh	r3, [r4, #12]
 8000b36:	f023 0303 	bic.w	r3, r3, #3
 8000b3a:	f043 0301 	orr.w	r3, r3, #1
 8000b3e:	81a3      	strh	r3, [r4, #12]
 8000b40:	89a0      	ldrh	r0, [r4, #12]
 8000b42:	4305      	orrs	r5, r0
 8000b44:	81a5      	strh	r5, [r4, #12]
 8000b46:	e7cd      	b.n	8000ae4 <__smakebuf_r+0x18>
 8000b48:	080008d9 	.word	0x080008d9

08000b4c <_free_r>:
 8000b4c:	b538      	push	{r3, r4, r5, lr}
 8000b4e:	4605      	mov	r5, r0
 8000b50:	2900      	cmp	r1, #0
 8000b52:	d040      	beq.n	8000bd6 <_free_r+0x8a>
 8000b54:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8000b58:	1f0c      	subs	r4, r1, #4
 8000b5a:	2b00      	cmp	r3, #0
 8000b5c:	bfb8      	it	lt
 8000b5e:	18e4      	addlt	r4, r4, r3
 8000b60:	f000 fc76 	bl	8001450 <__malloc_lock>
 8000b64:	4a1c      	ldr	r2, [pc, #112]	; (8000bd8 <_free_r+0x8c>)
 8000b66:	6813      	ldr	r3, [r2, #0]
 8000b68:	b933      	cbnz	r3, 8000b78 <_free_r+0x2c>
 8000b6a:	6063      	str	r3, [r4, #4]
 8000b6c:	6014      	str	r4, [r2, #0]
 8000b6e:	4628      	mov	r0, r5
 8000b70:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8000b74:	f000 bc72 	b.w	800145c <__malloc_unlock>
 8000b78:	42a3      	cmp	r3, r4
 8000b7a:	d908      	bls.n	8000b8e <_free_r+0x42>
 8000b7c:	6820      	ldr	r0, [r4, #0]
 8000b7e:	1821      	adds	r1, r4, r0
 8000b80:	428b      	cmp	r3, r1
 8000b82:	bf01      	itttt	eq
 8000b84:	6819      	ldreq	r1, [r3, #0]
 8000b86:	685b      	ldreq	r3, [r3, #4]
 8000b88:	1809      	addeq	r1, r1, r0
 8000b8a:	6021      	streq	r1, [r4, #0]
 8000b8c:	e7ed      	b.n	8000b6a <_free_r+0x1e>
 8000b8e:	461a      	mov	r2, r3
 8000b90:	685b      	ldr	r3, [r3, #4]
 8000b92:	b10b      	cbz	r3, 8000b98 <_free_r+0x4c>
 8000b94:	42a3      	cmp	r3, r4
 8000b96:	d9fa      	bls.n	8000b8e <_free_r+0x42>
 8000b98:	6811      	ldr	r1, [r2, #0]
 8000b9a:	1850      	adds	r0, r2, r1
 8000b9c:	42a0      	cmp	r0, r4
 8000b9e:	d10b      	bne.n	8000bb8 <_free_r+0x6c>
 8000ba0:	6820      	ldr	r0, [r4, #0]
 8000ba2:	4401      	add	r1, r0
 8000ba4:	1850      	adds	r0, r2, r1
 8000ba6:	4283      	cmp	r3, r0
 8000ba8:	6011      	str	r1, [r2, #0]
 8000baa:	d1e0      	bne.n	8000b6e <_free_r+0x22>
 8000bac:	6818      	ldr	r0, [r3, #0]
 8000bae:	685b      	ldr	r3, [r3, #4]
 8000bb0:	4401      	add	r1, r0
 8000bb2:	6011      	str	r1, [r2, #0]
 8000bb4:	6053      	str	r3, [r2, #4]
 8000bb6:	e7da      	b.n	8000b6e <_free_r+0x22>
 8000bb8:	d902      	bls.n	8000bc0 <_free_r+0x74>
 8000bba:	230c      	movs	r3, #12
 8000bbc:	602b      	str	r3, [r5, #0]
 8000bbe:	e7d6      	b.n	8000b6e <_free_r+0x22>
 8000bc0:	6820      	ldr	r0, [r4, #0]
 8000bc2:	1821      	adds	r1, r4, r0
 8000bc4:	428b      	cmp	r3, r1
 8000bc6:	bf01      	itttt	eq
 8000bc8:	6819      	ldreq	r1, [r3, #0]
 8000bca:	685b      	ldreq	r3, [r3, #4]
 8000bcc:	1809      	addeq	r1, r1, r0
 8000bce:	6021      	streq	r1, [r4, #0]
 8000bd0:	6063      	str	r3, [r4, #4]
 8000bd2:	6054      	str	r4, [r2, #4]
 8000bd4:	e7cb      	b.n	8000b6e <_free_r+0x22>
 8000bd6:	bd38      	pop	{r3, r4, r5, pc}
 8000bd8:	20000088 	.word	0x20000088

08000bdc <sbrk_aligned>:
 8000bdc:	b570      	push	{r4, r5, r6, lr}
 8000bde:	4e0e      	ldr	r6, [pc, #56]	; (8000c18 <sbrk_aligned+0x3c>)
 8000be0:	460c      	mov	r4, r1
 8000be2:	6831      	ldr	r1, [r6, #0]
 8000be4:	4605      	mov	r5, r0
 8000be6:	b911      	cbnz	r1, 8000bee <sbrk_aligned+0x12>
 8000be8:	f000 fb7a 	bl	80012e0 <_sbrk_r>
 8000bec:	6030      	str	r0, [r6, #0]
 8000bee:	4621      	mov	r1, r4
 8000bf0:	4628      	mov	r0, r5
 8000bf2:	f000 fb75 	bl	80012e0 <_sbrk_r>
 8000bf6:	1c43      	adds	r3, r0, #1
 8000bf8:	d00a      	beq.n	8000c10 <sbrk_aligned+0x34>
 8000bfa:	1cc4      	adds	r4, r0, #3
 8000bfc:	f024 0403 	bic.w	r4, r4, #3
 8000c00:	42a0      	cmp	r0, r4
 8000c02:	d007      	beq.n	8000c14 <sbrk_aligned+0x38>
 8000c04:	1a21      	subs	r1, r4, r0
 8000c06:	4628      	mov	r0, r5
 8000c08:	f000 fb6a 	bl	80012e0 <_sbrk_r>
 8000c0c:	3001      	adds	r0, #1
 8000c0e:	d101      	bne.n	8000c14 <sbrk_aligned+0x38>
 8000c10:	f04f 34ff 	mov.w	r4, #4294967295
 8000c14:	4620      	mov	r0, r4
 8000c16:	bd70      	pop	{r4, r5, r6, pc}
 8000c18:	2000008c 	.word	0x2000008c

08000c1c <_malloc_r>:
 8000c1c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8000c20:	1ccd      	adds	r5, r1, #3
 8000c22:	f025 0503 	bic.w	r5, r5, #3
 8000c26:	3508      	adds	r5, #8
 8000c28:	2d0c      	cmp	r5, #12
 8000c2a:	bf38      	it	cc
 8000c2c:	250c      	movcc	r5, #12
 8000c2e:	2d00      	cmp	r5, #0
 8000c30:	4607      	mov	r7, r0
 8000c32:	db01      	blt.n	8000c38 <_malloc_r+0x1c>
 8000c34:	42a9      	cmp	r1, r5
 8000c36:	d905      	bls.n	8000c44 <_malloc_r+0x28>
 8000c38:	230c      	movs	r3, #12
 8000c3a:	2600      	movs	r6, #0
 8000c3c:	603b      	str	r3, [r7, #0]
 8000c3e:	4630      	mov	r0, r6
 8000c40:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8000c44:	4e2e      	ldr	r6, [pc, #184]	; (8000d00 <_malloc_r+0xe4>)
 8000c46:	f000 fc03 	bl	8001450 <__malloc_lock>
 8000c4a:	6833      	ldr	r3, [r6, #0]
 8000c4c:	461c      	mov	r4, r3
 8000c4e:	bb34      	cbnz	r4, 8000c9e <_malloc_r+0x82>
 8000c50:	4629      	mov	r1, r5
 8000c52:	4638      	mov	r0, r7
 8000c54:	f7ff ffc2 	bl	8000bdc <sbrk_aligned>
 8000c58:	1c43      	adds	r3, r0, #1
 8000c5a:	4604      	mov	r4, r0
 8000c5c:	d14d      	bne.n	8000cfa <_malloc_r+0xde>
 8000c5e:	6834      	ldr	r4, [r6, #0]
 8000c60:	4626      	mov	r6, r4
 8000c62:	2e00      	cmp	r6, #0
 8000c64:	d140      	bne.n	8000ce8 <_malloc_r+0xcc>
 8000c66:	6823      	ldr	r3, [r4, #0]
 8000c68:	4631      	mov	r1, r6
 8000c6a:	4638      	mov	r0, r7
 8000c6c:	eb04 0803 	add.w	r8, r4, r3
 8000c70:	f000 fb36 	bl	80012e0 <_sbrk_r>
 8000c74:	4580      	cmp	r8, r0
 8000c76:	d13a      	bne.n	8000cee <_malloc_r+0xd2>
 8000c78:	6821      	ldr	r1, [r4, #0]
 8000c7a:	3503      	adds	r5, #3
 8000c7c:	1a6d      	subs	r5, r5, r1
 8000c7e:	f025 0503 	bic.w	r5, r5, #3
 8000c82:	3508      	adds	r5, #8
 8000c84:	2d0c      	cmp	r5, #12
 8000c86:	bf38      	it	cc
 8000c88:	250c      	movcc	r5, #12
 8000c8a:	4638      	mov	r0, r7
 8000c8c:	4629      	mov	r1, r5
 8000c8e:	f7ff ffa5 	bl	8000bdc <sbrk_aligned>
 8000c92:	3001      	adds	r0, #1
 8000c94:	d02b      	beq.n	8000cee <_malloc_r+0xd2>
 8000c96:	6823      	ldr	r3, [r4, #0]
 8000c98:	442b      	add	r3, r5
 8000c9a:	6023      	str	r3, [r4, #0]
 8000c9c:	e00e      	b.n	8000cbc <_malloc_r+0xa0>
 8000c9e:	6822      	ldr	r2, [r4, #0]
 8000ca0:	1b52      	subs	r2, r2, r5
 8000ca2:	d41e      	bmi.n	8000ce2 <_malloc_r+0xc6>
 8000ca4:	2a0b      	cmp	r2, #11
 8000ca6:	d916      	bls.n	8000cd6 <_malloc_r+0xba>
 8000ca8:	1961      	adds	r1, r4, r5
 8000caa:	42a3      	cmp	r3, r4
 8000cac:	6025      	str	r5, [r4, #0]
 8000cae:	bf18      	it	ne
 8000cb0:	6059      	strne	r1, [r3, #4]
 8000cb2:	6863      	ldr	r3, [r4, #4]
 8000cb4:	bf08      	it	eq
 8000cb6:	6031      	streq	r1, [r6, #0]
 8000cb8:	5162      	str	r2, [r4, r5]
 8000cba:	604b      	str	r3, [r1, #4]
 8000cbc:	4638      	mov	r0, r7
 8000cbe:	f104 060b 	add.w	r6, r4, #11
 8000cc2:	f000 fbcb 	bl	800145c <__malloc_unlock>
 8000cc6:	f026 0607 	bic.w	r6, r6, #7
 8000cca:	1d23      	adds	r3, r4, #4
 8000ccc:	1af2      	subs	r2, r6, r3
 8000cce:	d0b6      	beq.n	8000c3e <_malloc_r+0x22>
 8000cd0:	1b9b      	subs	r3, r3, r6
 8000cd2:	50a3      	str	r3, [r4, r2]
 8000cd4:	e7b3      	b.n	8000c3e <_malloc_r+0x22>
 8000cd6:	6862      	ldr	r2, [r4, #4]
 8000cd8:	42a3      	cmp	r3, r4
 8000cda:	bf0c      	ite	eq
 8000cdc:	6032      	streq	r2, [r6, #0]
 8000cde:	605a      	strne	r2, [r3, #4]
 8000ce0:	e7ec      	b.n	8000cbc <_malloc_r+0xa0>
 8000ce2:	4623      	mov	r3, r4
 8000ce4:	6864      	ldr	r4, [r4, #4]
 8000ce6:	e7b2      	b.n	8000c4e <_malloc_r+0x32>
 8000ce8:	4634      	mov	r4, r6
 8000cea:	6876      	ldr	r6, [r6, #4]
 8000cec:	e7b9      	b.n	8000c62 <_malloc_r+0x46>
 8000cee:	230c      	movs	r3, #12
 8000cf0:	4638      	mov	r0, r7
 8000cf2:	603b      	str	r3, [r7, #0]
 8000cf4:	f000 fbb2 	bl	800145c <__malloc_unlock>
 8000cf8:	e7a1      	b.n	8000c3e <_malloc_r+0x22>
 8000cfa:	6025      	str	r5, [r4, #0]
 8000cfc:	e7de      	b.n	8000cbc <_malloc_r+0xa0>
 8000cfe:	bf00      	nop
 8000d00:	20000088 	.word	0x20000088

08000d04 <__sfputc_r>:
 8000d04:	6893      	ldr	r3, [r2, #8]
 8000d06:	b410      	push	{r4}
 8000d08:	3b01      	subs	r3, #1
 8000d0a:	2b00      	cmp	r3, #0
 8000d0c:	6093      	str	r3, [r2, #8]
 8000d0e:	da07      	bge.n	8000d20 <__sfputc_r+0x1c>
 8000d10:	6994      	ldr	r4, [r2, #24]
 8000d12:	42a3      	cmp	r3, r4
 8000d14:	db01      	blt.n	8000d1a <__sfputc_r+0x16>
 8000d16:	290a      	cmp	r1, #10
 8000d18:	d102      	bne.n	8000d20 <__sfputc_r+0x1c>
 8000d1a:	bc10      	pop	{r4}
 8000d1c:	f7ff bc3a 	b.w	8000594 <__swbuf_r>
 8000d20:	6813      	ldr	r3, [r2, #0]
 8000d22:	1c58      	adds	r0, r3, #1
 8000d24:	6010      	str	r0, [r2, #0]
 8000d26:	7019      	strb	r1, [r3, #0]
 8000d28:	4608      	mov	r0, r1
 8000d2a:	bc10      	pop	{r4}
 8000d2c:	4770      	bx	lr

08000d2e <__sfputs_r>:
 8000d2e:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000d30:	4606      	mov	r6, r0
 8000d32:	460f      	mov	r7, r1
 8000d34:	4614      	mov	r4, r2
 8000d36:	18d5      	adds	r5, r2, r3
 8000d38:	42ac      	cmp	r4, r5
 8000d3a:	d101      	bne.n	8000d40 <__sfputs_r+0x12>
 8000d3c:	2000      	movs	r0, #0
 8000d3e:	e007      	b.n	8000d50 <__sfputs_r+0x22>
 8000d40:	463a      	mov	r2, r7
 8000d42:	4630      	mov	r0, r6
 8000d44:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000d48:	f7ff ffdc 	bl	8000d04 <__sfputc_r>
 8000d4c:	1c43      	adds	r3, r0, #1
 8000d4e:	d1f3      	bne.n	8000d38 <__sfputs_r+0xa>
 8000d50:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

08000d54 <_vfiprintf_r>:
 8000d54:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8000d58:	460d      	mov	r5, r1
 8000d5a:	4614      	mov	r4, r2
 8000d5c:	4698      	mov	r8, r3
 8000d5e:	4606      	mov	r6, r0
 8000d60:	b09d      	sub	sp, #116	; 0x74
 8000d62:	b118      	cbz	r0, 8000d6c <_vfiprintf_r+0x18>
 8000d64:	6983      	ldr	r3, [r0, #24]
 8000d66:	b90b      	cbnz	r3, 8000d6c <_vfiprintf_r+0x18>
 8000d68:	f7ff fdea 	bl	8000940 <__sinit>
 8000d6c:	4b89      	ldr	r3, [pc, #548]	; (8000f94 <_vfiprintf_r+0x240>)
 8000d6e:	429d      	cmp	r5, r3
 8000d70:	d11b      	bne.n	8000daa <_vfiprintf_r+0x56>
 8000d72:	6875      	ldr	r5, [r6, #4]
 8000d74:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000d76:	07d9      	lsls	r1, r3, #31
 8000d78:	d405      	bmi.n	8000d86 <_vfiprintf_r+0x32>
 8000d7a:	89ab      	ldrh	r3, [r5, #12]
 8000d7c:	059a      	lsls	r2, r3, #22
 8000d7e:	d402      	bmi.n	8000d86 <_vfiprintf_r+0x32>
 8000d80:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000d82:	f7ff fe7b 	bl	8000a7c <__retarget_lock_acquire_recursive>
 8000d86:	89ab      	ldrh	r3, [r5, #12]
 8000d88:	071b      	lsls	r3, r3, #28
 8000d8a:	d501      	bpl.n	8000d90 <_vfiprintf_r+0x3c>
 8000d8c:	692b      	ldr	r3, [r5, #16]
 8000d8e:	b9eb      	cbnz	r3, 8000dcc <_vfiprintf_r+0x78>
 8000d90:	4629      	mov	r1, r5
 8000d92:	4630      	mov	r0, r6
 8000d94:	f7ff fc50 	bl	8000638 <__swsetup_r>
 8000d98:	b1c0      	cbz	r0, 8000dcc <_vfiprintf_r+0x78>
 8000d9a:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000d9c:	07dc      	lsls	r4, r3, #31
 8000d9e:	d50e      	bpl.n	8000dbe <_vfiprintf_r+0x6a>
 8000da0:	f04f 30ff 	mov.w	r0, #4294967295
 8000da4:	b01d      	add	sp, #116	; 0x74
 8000da6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8000daa:	4b7b      	ldr	r3, [pc, #492]	; (8000f98 <_vfiprintf_r+0x244>)
 8000dac:	429d      	cmp	r5, r3
 8000dae:	d101      	bne.n	8000db4 <_vfiprintf_r+0x60>
 8000db0:	68b5      	ldr	r5, [r6, #8]
 8000db2:	e7df      	b.n	8000d74 <_vfiprintf_r+0x20>
 8000db4:	4b79      	ldr	r3, [pc, #484]	; (8000f9c <_vfiprintf_r+0x248>)
 8000db6:	429d      	cmp	r5, r3
 8000db8:	bf08      	it	eq
 8000dba:	68f5      	ldreq	r5, [r6, #12]
 8000dbc:	e7da      	b.n	8000d74 <_vfiprintf_r+0x20>
 8000dbe:	89ab      	ldrh	r3, [r5, #12]
 8000dc0:	0598      	lsls	r0, r3, #22
 8000dc2:	d4ed      	bmi.n	8000da0 <_vfiprintf_r+0x4c>
 8000dc4:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000dc6:	f7ff fe5a 	bl	8000a7e <__retarget_lock_release_recursive>
 8000dca:	e7e9      	b.n	8000da0 <_vfiprintf_r+0x4c>
 8000dcc:	2300      	movs	r3, #0
 8000dce:	9309      	str	r3, [sp, #36]	; 0x24
 8000dd0:	2320      	movs	r3, #32
 8000dd2:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 8000dd6:	2330      	movs	r3, #48	; 0x30
 8000dd8:	f04f 0901 	mov.w	r9, #1
 8000ddc:	f8cd 800c 	str.w	r8, [sp, #12]
 8000de0:	f8df 81bc 	ldr.w	r8, [pc, #444]	; 8000fa0 <_vfiprintf_r+0x24c>
 8000de4:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 8000de8:	4623      	mov	r3, r4
 8000dea:	469a      	mov	sl, r3
 8000dec:	f813 2b01 	ldrb.w	r2, [r3], #1
 8000df0:	b10a      	cbz	r2, 8000df6 <_vfiprintf_r+0xa2>
 8000df2:	2a25      	cmp	r2, #37	; 0x25
 8000df4:	d1f9      	bne.n	8000dea <_vfiprintf_r+0x96>
 8000df6:	ebba 0b04 	subs.w	fp, sl, r4
 8000dfa:	d00b      	beq.n	8000e14 <_vfiprintf_r+0xc0>
 8000dfc:	465b      	mov	r3, fp
 8000dfe:	4622      	mov	r2, r4
 8000e00:	4629      	mov	r1, r5
 8000e02:	4630      	mov	r0, r6
 8000e04:	f7ff ff93 	bl	8000d2e <__sfputs_r>
 8000e08:	3001      	adds	r0, #1
 8000e0a:	f000 80aa 	beq.w	8000f62 <_vfiprintf_r+0x20e>
 8000e0e:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8000e10:	445a      	add	r2, fp
 8000e12:	9209      	str	r2, [sp, #36]	; 0x24
 8000e14:	f89a 3000 	ldrb.w	r3, [sl]
 8000e18:	2b00      	cmp	r3, #0
 8000e1a:	f000 80a2 	beq.w	8000f62 <_vfiprintf_r+0x20e>
 8000e1e:	2300      	movs	r3, #0
 8000e20:	f04f 32ff 	mov.w	r2, #4294967295
 8000e24:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8000e28:	f10a 0a01 	add.w	sl, sl, #1
 8000e2c:	9304      	str	r3, [sp, #16]
 8000e2e:	9307      	str	r3, [sp, #28]
 8000e30:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 8000e34:	931a      	str	r3, [sp, #104]	; 0x68
 8000e36:	4654      	mov	r4, sl
 8000e38:	2205      	movs	r2, #5
 8000e3a:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000e3e:	4858      	ldr	r0, [pc, #352]	; (8000fa0 <_vfiprintf_r+0x24c>)
 8000e40:	f000 faf8 	bl	8001434 <memchr>
 8000e44:	9a04      	ldr	r2, [sp, #16]
 8000e46:	b9d8      	cbnz	r0, 8000e80 <_vfiprintf_r+0x12c>
 8000e48:	06d1      	lsls	r1, r2, #27
 8000e4a:	bf44      	itt	mi
 8000e4c:	2320      	movmi	r3, #32
 8000e4e:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000e52:	0713      	lsls	r3, r2, #28
 8000e54:	bf44      	itt	mi
 8000e56:	232b      	movmi	r3, #43	; 0x2b
 8000e58:	f88d 3053 	strbmi.w	r3, [sp, #83]	; 0x53
 8000e5c:	f89a 3000 	ldrb.w	r3, [sl]
 8000e60:	2b2a      	cmp	r3, #42	; 0x2a
 8000e62:	d015      	beq.n	8000e90 <_vfiprintf_r+0x13c>
 8000e64:	4654      	mov	r4, sl
 8000e66:	2000      	movs	r0, #0
 8000e68:	f04f 0c0a 	mov.w	ip, #10
 8000e6c:	9a07      	ldr	r2, [sp, #28]
 8000e6e:	4621      	mov	r1, r4
 8000e70:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000e74:	3b30      	subs	r3, #48	; 0x30
 8000e76:	2b09      	cmp	r3, #9
 8000e78:	d94e      	bls.n	8000f18 <_vfiprintf_r+0x1c4>
 8000e7a:	b1b0      	cbz	r0, 8000eaa <_vfiprintf_r+0x156>
 8000e7c:	9207      	str	r2, [sp, #28]
 8000e7e:	e014      	b.n	8000eaa <_vfiprintf_r+0x156>
 8000e80:	eba0 0308 	sub.w	r3, r0, r8
 8000e84:	fa09 f303 	lsl.w	r3, r9, r3
 8000e88:	4313      	orrs	r3, r2
 8000e8a:	46a2      	mov	sl, r4
 8000e8c:	9304      	str	r3, [sp, #16]
 8000e8e:	e7d2      	b.n	8000e36 <_vfiprintf_r+0xe2>
 8000e90:	9b03      	ldr	r3, [sp, #12]
 8000e92:	1d19      	adds	r1, r3, #4
 8000e94:	681b      	ldr	r3, [r3, #0]
 8000e96:	9103      	str	r1, [sp, #12]
 8000e98:	2b00      	cmp	r3, #0
 8000e9a:	bfbb      	ittet	lt
 8000e9c:	425b      	neglt	r3, r3
 8000e9e:	f042 0202 	orrlt.w	r2, r2, #2
 8000ea2:	9307      	strge	r3, [sp, #28]
 8000ea4:	9307      	strlt	r3, [sp, #28]
 8000ea6:	bfb8      	it	lt
 8000ea8:	9204      	strlt	r2, [sp, #16]
 8000eaa:	7823      	ldrb	r3, [r4, #0]
 8000eac:	2b2e      	cmp	r3, #46	; 0x2e
 8000eae:	d10c      	bne.n	8000eca <_vfiprintf_r+0x176>
 8000eb0:	7863      	ldrb	r3, [r4, #1]
 8000eb2:	2b2a      	cmp	r3, #42	; 0x2a
 8000eb4:	d135      	bne.n	8000f22 <_vfiprintf_r+0x1ce>
 8000eb6:	9b03      	ldr	r3, [sp, #12]
 8000eb8:	3402      	adds	r4, #2
 8000eba:	1d1a      	adds	r2, r3, #4
 8000ebc:	681b      	ldr	r3, [r3, #0]
 8000ebe:	9203      	str	r2, [sp, #12]
 8000ec0:	2b00      	cmp	r3, #0
 8000ec2:	bfb8      	it	lt
 8000ec4:	f04f 33ff 	movlt.w	r3, #4294967295
 8000ec8:	9305      	str	r3, [sp, #20]
 8000eca:	f8df a0d8 	ldr.w	sl, [pc, #216]	; 8000fa4 <_vfiprintf_r+0x250>
 8000ece:	2203      	movs	r2, #3
 8000ed0:	4650      	mov	r0, sl
 8000ed2:	7821      	ldrb	r1, [r4, #0]
 8000ed4:	f000 faae 	bl	8001434 <memchr>
 8000ed8:	b140      	cbz	r0, 8000eec <_vfiprintf_r+0x198>
 8000eda:	2340      	movs	r3, #64	; 0x40
 8000edc:	eba0 000a 	sub.w	r0, r0, sl
 8000ee0:	fa03 f000 	lsl.w	r0, r3, r0
 8000ee4:	9b04      	ldr	r3, [sp, #16]
 8000ee6:	3401      	adds	r4, #1
 8000ee8:	4303      	orrs	r3, r0
 8000eea:	9304      	str	r3, [sp, #16]
 8000eec:	f814 1b01 	ldrb.w	r1, [r4], #1
 8000ef0:	2206      	movs	r2, #6
 8000ef2:	482d      	ldr	r0, [pc, #180]	; (8000fa8 <_vfiprintf_r+0x254>)
 8000ef4:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 8000ef8:	f000 fa9c 	bl	8001434 <memchr>
 8000efc:	2800      	cmp	r0, #0
 8000efe:	d03f      	beq.n	8000f80 <_vfiprintf_r+0x22c>
 8000f00:	4b2a      	ldr	r3, [pc, #168]	; (8000fac <_vfiprintf_r+0x258>)
 8000f02:	bb1b      	cbnz	r3, 8000f4c <_vfiprintf_r+0x1f8>
 8000f04:	9b03      	ldr	r3, [sp, #12]
 8000f06:	3307      	adds	r3, #7
 8000f08:	f023 0307 	bic.w	r3, r3, #7
 8000f0c:	3308      	adds	r3, #8
 8000f0e:	9303      	str	r3, [sp, #12]
 8000f10:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8000f12:	443b      	add	r3, r7
 8000f14:	9309      	str	r3, [sp, #36]	; 0x24
 8000f16:	e767      	b.n	8000de8 <_vfiprintf_r+0x94>
 8000f18:	460c      	mov	r4, r1
 8000f1a:	2001      	movs	r0, #1
 8000f1c:	fb0c 3202 	mla	r2, ip, r2, r3
 8000f20:	e7a5      	b.n	8000e6e <_vfiprintf_r+0x11a>
 8000f22:	2300      	movs	r3, #0
 8000f24:	f04f 0c0a 	mov.w	ip, #10
 8000f28:	4619      	mov	r1, r3
 8000f2a:	3401      	adds	r4, #1
 8000f2c:	9305      	str	r3, [sp, #20]
 8000f2e:	4620      	mov	r0, r4
 8000f30:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000f34:	3a30      	subs	r2, #48	; 0x30
 8000f36:	2a09      	cmp	r2, #9
 8000f38:	d903      	bls.n	8000f42 <_vfiprintf_r+0x1ee>
 8000f3a:	2b00      	cmp	r3, #0
 8000f3c:	d0c5      	beq.n	8000eca <_vfiprintf_r+0x176>
 8000f3e:	9105      	str	r1, [sp, #20]
 8000f40:	e7c3      	b.n	8000eca <_vfiprintf_r+0x176>
 8000f42:	4604      	mov	r4, r0
 8000f44:	2301      	movs	r3, #1
 8000f46:	fb0c 2101 	mla	r1, ip, r1, r2
 8000f4a:	e7f0      	b.n	8000f2e <_vfiprintf_r+0x1da>
 8000f4c:	ab03      	add	r3, sp, #12
 8000f4e:	9300      	str	r3, [sp, #0]
 8000f50:	462a      	mov	r2, r5
 8000f52:	4630      	mov	r0, r6
 8000f54:	4b16      	ldr	r3, [pc, #88]	; (8000fb0 <_vfiprintf_r+0x25c>)
 8000f56:	a904      	add	r1, sp, #16
 8000f58:	f3af 8000 	nop.w
 8000f5c:	4607      	mov	r7, r0
 8000f5e:	1c78      	adds	r0, r7, #1
 8000f60:	d1d6      	bne.n	8000f10 <_vfiprintf_r+0x1bc>
 8000f62:	6e6b      	ldr	r3, [r5, #100]	; 0x64
 8000f64:	07d9      	lsls	r1, r3, #31
 8000f66:	d405      	bmi.n	8000f74 <_vfiprintf_r+0x220>
 8000f68:	89ab      	ldrh	r3, [r5, #12]
 8000f6a:	059a      	lsls	r2, r3, #22
 8000f6c:	d402      	bmi.n	8000f74 <_vfiprintf_r+0x220>
 8000f6e:	6da8      	ldr	r0, [r5, #88]	; 0x58
 8000f70:	f7ff fd85 	bl	8000a7e <__retarget_lock_release_recursive>
 8000f74:	89ab      	ldrh	r3, [r5, #12]
 8000f76:	065b      	lsls	r3, r3, #25
 8000f78:	f53f af12 	bmi.w	8000da0 <_vfiprintf_r+0x4c>
 8000f7c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8000f7e:	e711      	b.n	8000da4 <_vfiprintf_r+0x50>
 8000f80:	ab03      	add	r3, sp, #12
 8000f82:	9300      	str	r3, [sp, #0]
 8000f84:	462a      	mov	r2, r5
 8000f86:	4630      	mov	r0, r6
 8000f88:	4b09      	ldr	r3, [pc, #36]	; (8000fb0 <_vfiprintf_r+0x25c>)
 8000f8a:	a904      	add	r1, sp, #16
 8000f8c:	f000 f882 	bl	8001094 <_printf_i>
 8000f90:	e7e4      	b.n	8000f5c <_vfiprintf_r+0x208>
 8000f92:	bf00      	nop
 8000f94:	08001534 	.word	0x08001534
 8000f98:	08001554 	.word	0x08001554
 8000f9c:	08001514 	.word	0x08001514
 8000fa0:	08001574 	.word	0x08001574
 8000fa4:	0800157a 	.word	0x0800157a
 8000fa8:	0800157e 	.word	0x0800157e
 8000fac:	00000000 	.word	0x00000000
 8000fb0:	08000d2f 	.word	0x08000d2f

08000fb4 <_printf_common>:
 8000fb4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000fb8:	4616      	mov	r6, r2
 8000fba:	4699      	mov	r9, r3
 8000fbc:	688a      	ldr	r2, [r1, #8]
 8000fbe:	690b      	ldr	r3, [r1, #16]
 8000fc0:	4607      	mov	r7, r0
 8000fc2:	4293      	cmp	r3, r2
 8000fc4:	bfb8      	it	lt
 8000fc6:	4613      	movlt	r3, r2
 8000fc8:	6033      	str	r3, [r6, #0]
 8000fca:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 8000fce:	460c      	mov	r4, r1
 8000fd0:	f8dd 8020 	ldr.w	r8, [sp, #32]
 8000fd4:	b10a      	cbz	r2, 8000fda <_printf_common+0x26>
 8000fd6:	3301      	adds	r3, #1
 8000fd8:	6033      	str	r3, [r6, #0]
 8000fda:	6823      	ldr	r3, [r4, #0]
 8000fdc:	0699      	lsls	r1, r3, #26
 8000fde:	bf42      	ittt	mi
 8000fe0:	6833      	ldrmi	r3, [r6, #0]
 8000fe2:	3302      	addmi	r3, #2
 8000fe4:	6033      	strmi	r3, [r6, #0]
 8000fe6:	6825      	ldr	r5, [r4, #0]
 8000fe8:	f015 0506 	ands.w	r5, r5, #6
 8000fec:	d106      	bne.n	8000ffc <_printf_common+0x48>
 8000fee:	f104 0a19 	add.w	sl, r4, #25
 8000ff2:	68e3      	ldr	r3, [r4, #12]
 8000ff4:	6832      	ldr	r2, [r6, #0]
 8000ff6:	1a9b      	subs	r3, r3, r2
 8000ff8:	42ab      	cmp	r3, r5
 8000ffa:	dc28      	bgt.n	800104e <_printf_common+0x9a>
 8000ffc:	f894 2043 	ldrb.w	r2, [r4, #67]	; 0x43
 8001000:	1e13      	subs	r3, r2, #0
 8001002:	6822      	ldr	r2, [r4, #0]
 8001004:	bf18      	it	ne
 8001006:	2301      	movne	r3, #1
 8001008:	0692      	lsls	r2, r2, #26
 800100a:	d42d      	bmi.n	8001068 <_printf_common+0xb4>
 800100c:	4649      	mov	r1, r9
 800100e:	4638      	mov	r0, r7
 8001010:	f104 0243 	add.w	r2, r4, #67	; 0x43
 8001014:	47c0      	blx	r8
 8001016:	3001      	adds	r0, #1
 8001018:	d020      	beq.n	800105c <_printf_common+0xa8>
 800101a:	6823      	ldr	r3, [r4, #0]
 800101c:	68e5      	ldr	r5, [r4, #12]
 800101e:	f003 0306 	and.w	r3, r3, #6
 8001022:	2b04      	cmp	r3, #4
 8001024:	bf18      	it	ne
 8001026:	2500      	movne	r5, #0
 8001028:	6832      	ldr	r2, [r6, #0]
 800102a:	f04f 0600 	mov.w	r6, #0
 800102e:	68a3      	ldr	r3, [r4, #8]
 8001030:	bf08      	it	eq
 8001032:	1aad      	subeq	r5, r5, r2
 8001034:	6922      	ldr	r2, [r4, #16]
 8001036:	bf08      	it	eq
 8001038:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 800103c:	4293      	cmp	r3, r2
 800103e:	bfc4      	itt	gt
 8001040:	1a9b      	subgt	r3, r3, r2
 8001042:	18ed      	addgt	r5, r5, r3
 8001044:	341a      	adds	r4, #26
 8001046:	42b5      	cmp	r5, r6
 8001048:	d11a      	bne.n	8001080 <_printf_common+0xcc>
 800104a:	2000      	movs	r0, #0
 800104c:	e008      	b.n	8001060 <_printf_common+0xac>
 800104e:	2301      	movs	r3, #1
 8001050:	4652      	mov	r2, sl
 8001052:	4649      	mov	r1, r9
 8001054:	4638      	mov	r0, r7
 8001056:	47c0      	blx	r8
 8001058:	3001      	adds	r0, #1
 800105a:	d103      	bne.n	8001064 <_printf_common+0xb0>
 800105c:	f04f 30ff 	mov.w	r0, #4294967295
 8001060:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001064:	3501      	adds	r5, #1
 8001066:	e7c4      	b.n	8000ff2 <_printf_common+0x3e>
 8001068:	2030      	movs	r0, #48	; 0x30
 800106a:	18e1      	adds	r1, r4, r3
 800106c:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 8001070:	1c5a      	adds	r2, r3, #1
 8001072:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 8001076:	4422      	add	r2, r4
 8001078:	3302      	adds	r3, #2
 800107a:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 800107e:	e7c5      	b.n	800100c <_printf_common+0x58>
 8001080:	2301      	movs	r3, #1
 8001082:	4622      	mov	r2, r4
 8001084:	4649      	mov	r1, r9
 8001086:	4638      	mov	r0, r7
 8001088:	47c0      	blx	r8
 800108a:	3001      	adds	r0, #1
 800108c:	d0e6      	beq.n	800105c <_printf_common+0xa8>
 800108e:	3601      	adds	r6, #1
 8001090:	e7d9      	b.n	8001046 <_printf_common+0x92>
	...

08001094 <_printf_i>:
 8001094:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 8001098:	7e0f      	ldrb	r7, [r1, #24]
 800109a:	4691      	mov	r9, r2
 800109c:	2f78      	cmp	r7, #120	; 0x78
 800109e:	4680      	mov	r8, r0
 80010a0:	460c      	mov	r4, r1
 80010a2:	469a      	mov	sl, r3
 80010a4:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80010a6:	f101 0243 	add.w	r2, r1, #67	; 0x43
 80010aa:	d807      	bhi.n	80010bc <_printf_i+0x28>
 80010ac:	2f62      	cmp	r7, #98	; 0x62
 80010ae:	d80a      	bhi.n	80010c6 <_printf_i+0x32>
 80010b0:	2f00      	cmp	r7, #0
 80010b2:	f000 80d9 	beq.w	8001268 <_printf_i+0x1d4>
 80010b6:	2f58      	cmp	r7, #88	; 0x58
 80010b8:	f000 80a4 	beq.w	8001204 <_printf_i+0x170>
 80010bc:	f104 0542 	add.w	r5, r4, #66	; 0x42
 80010c0:	f884 7042 	strb.w	r7, [r4, #66]	; 0x42
 80010c4:	e03a      	b.n	800113c <_printf_i+0xa8>
 80010c6:	f1a7 0363 	sub.w	r3, r7, #99	; 0x63
 80010ca:	2b15      	cmp	r3, #21
 80010cc:	d8f6      	bhi.n	80010bc <_printf_i+0x28>
 80010ce:	a101      	add	r1, pc, #4	; (adr r1, 80010d4 <_printf_i+0x40>)
 80010d0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 80010d4:	0800112d 	.word	0x0800112d
 80010d8:	08001141 	.word	0x08001141
 80010dc:	080010bd 	.word	0x080010bd
 80010e0:	080010bd 	.word	0x080010bd
 80010e4:	080010bd 	.word	0x080010bd
 80010e8:	080010bd 	.word	0x080010bd
 80010ec:	08001141 	.word	0x08001141
 80010f0:	080010bd 	.word	0x080010bd
 80010f4:	080010bd 	.word	0x080010bd
 80010f8:	080010bd 	.word	0x080010bd
 80010fc:	080010bd 	.word	0x080010bd
 8001100:	0800124f 	.word	0x0800124f
 8001104:	08001171 	.word	0x08001171
 8001108:	08001231 	.word	0x08001231
 800110c:	080010bd 	.word	0x080010bd
 8001110:	080010bd 	.word	0x080010bd
 8001114:	08001271 	.word	0x08001271
 8001118:	080010bd 	.word	0x080010bd
 800111c:	08001171 	.word	0x08001171
 8001120:	080010bd 	.word	0x080010bd
 8001124:	080010bd 	.word	0x080010bd
 8001128:	08001239 	.word	0x08001239
 800112c:	682b      	ldr	r3, [r5, #0]
 800112e:	1d1a      	adds	r2, r3, #4
 8001130:	681b      	ldr	r3, [r3, #0]
 8001132:	602a      	str	r2, [r5, #0]
 8001134:	f104 0542 	add.w	r5, r4, #66	; 0x42
 8001138:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 800113c:	2301      	movs	r3, #1
 800113e:	e0a4      	b.n	800128a <_printf_i+0x1f6>
 8001140:	6820      	ldr	r0, [r4, #0]
 8001142:	6829      	ldr	r1, [r5, #0]
 8001144:	0606      	lsls	r6, r0, #24
 8001146:	f101 0304 	add.w	r3, r1, #4
 800114a:	d50a      	bpl.n	8001162 <_printf_i+0xce>
 800114c:	680e      	ldr	r6, [r1, #0]
 800114e:	602b      	str	r3, [r5, #0]
 8001150:	2e00      	cmp	r6, #0
 8001152:	da03      	bge.n	800115c <_printf_i+0xc8>
 8001154:	232d      	movs	r3, #45	; 0x2d
 8001156:	4276      	negs	r6, r6
 8001158:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 800115c:	230a      	movs	r3, #10
 800115e:	485e      	ldr	r0, [pc, #376]	; (80012d8 <_printf_i+0x244>)
 8001160:	e019      	b.n	8001196 <_printf_i+0x102>
 8001162:	680e      	ldr	r6, [r1, #0]
 8001164:	f010 0f40 	tst.w	r0, #64	; 0x40
 8001168:	602b      	str	r3, [r5, #0]
 800116a:	bf18      	it	ne
 800116c:	b236      	sxthne	r6, r6
 800116e:	e7ef      	b.n	8001150 <_printf_i+0xbc>
 8001170:	682b      	ldr	r3, [r5, #0]
 8001172:	6820      	ldr	r0, [r4, #0]
 8001174:	1d19      	adds	r1, r3, #4
 8001176:	6029      	str	r1, [r5, #0]
 8001178:	0601      	lsls	r1, r0, #24
 800117a:	d501      	bpl.n	8001180 <_printf_i+0xec>
 800117c:	681e      	ldr	r6, [r3, #0]
 800117e:	e002      	b.n	8001186 <_printf_i+0xf2>
 8001180:	0646      	lsls	r6, r0, #25
 8001182:	d5fb      	bpl.n	800117c <_printf_i+0xe8>
 8001184:	881e      	ldrh	r6, [r3, #0]
 8001186:	2f6f      	cmp	r7, #111	; 0x6f
 8001188:	bf0c      	ite	eq
 800118a:	2308      	moveq	r3, #8
 800118c:	230a      	movne	r3, #10
 800118e:	4852      	ldr	r0, [pc, #328]	; (80012d8 <_printf_i+0x244>)
 8001190:	2100      	movs	r1, #0
 8001192:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 8001196:	6865      	ldr	r5, [r4, #4]
 8001198:	2d00      	cmp	r5, #0
 800119a:	bfa8      	it	ge
 800119c:	6821      	ldrge	r1, [r4, #0]
 800119e:	60a5      	str	r5, [r4, #8]
 80011a0:	bfa4      	itt	ge
 80011a2:	f021 0104 	bicge.w	r1, r1, #4
 80011a6:	6021      	strge	r1, [r4, #0]
 80011a8:	b90e      	cbnz	r6, 80011ae <_printf_i+0x11a>
 80011aa:	2d00      	cmp	r5, #0
 80011ac:	d04d      	beq.n	800124a <_printf_i+0x1b6>
 80011ae:	4615      	mov	r5, r2
 80011b0:	fbb6 f1f3 	udiv	r1, r6, r3
 80011b4:	fb03 6711 	mls	r7, r3, r1, r6
 80011b8:	5dc7      	ldrb	r7, [r0, r7]
 80011ba:	f805 7d01 	strb.w	r7, [r5, #-1]!
 80011be:	4637      	mov	r7, r6
 80011c0:	42bb      	cmp	r3, r7
 80011c2:	460e      	mov	r6, r1
 80011c4:	d9f4      	bls.n	80011b0 <_printf_i+0x11c>
 80011c6:	2b08      	cmp	r3, #8
 80011c8:	d10b      	bne.n	80011e2 <_printf_i+0x14e>
 80011ca:	6823      	ldr	r3, [r4, #0]
 80011cc:	07de      	lsls	r6, r3, #31
 80011ce:	d508      	bpl.n	80011e2 <_printf_i+0x14e>
 80011d0:	6923      	ldr	r3, [r4, #16]
 80011d2:	6861      	ldr	r1, [r4, #4]
 80011d4:	4299      	cmp	r1, r3
 80011d6:	bfde      	ittt	le
 80011d8:	2330      	movle	r3, #48	; 0x30
 80011da:	f805 3c01 	strble.w	r3, [r5, #-1]
 80011de:	f105 35ff 	addle.w	r5, r5, #4294967295
 80011e2:	1b52      	subs	r2, r2, r5
 80011e4:	6122      	str	r2, [r4, #16]
 80011e6:	464b      	mov	r3, r9
 80011e8:	4621      	mov	r1, r4
 80011ea:	4640      	mov	r0, r8
 80011ec:	f8cd a000 	str.w	sl, [sp]
 80011f0:	aa03      	add	r2, sp, #12
 80011f2:	f7ff fedf 	bl	8000fb4 <_printf_common>
 80011f6:	3001      	adds	r0, #1
 80011f8:	d14c      	bne.n	8001294 <_printf_i+0x200>
 80011fa:	f04f 30ff 	mov.w	r0, #4294967295
 80011fe:	b004      	add	sp, #16
 8001200:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8001204:	4834      	ldr	r0, [pc, #208]	; (80012d8 <_printf_i+0x244>)
 8001206:	f881 7045 	strb.w	r7, [r1, #69]	; 0x45
 800120a:	6829      	ldr	r1, [r5, #0]
 800120c:	6823      	ldr	r3, [r4, #0]
 800120e:	f851 6b04 	ldr.w	r6, [r1], #4
 8001212:	6029      	str	r1, [r5, #0]
 8001214:	061d      	lsls	r5, r3, #24
 8001216:	d514      	bpl.n	8001242 <_printf_i+0x1ae>
 8001218:	07df      	lsls	r7, r3, #31
 800121a:	bf44      	itt	mi
 800121c:	f043 0320 	orrmi.w	r3, r3, #32
 8001220:	6023      	strmi	r3, [r4, #0]
 8001222:	b91e      	cbnz	r6, 800122c <_printf_i+0x198>
 8001224:	6823      	ldr	r3, [r4, #0]
 8001226:	f023 0320 	bic.w	r3, r3, #32
 800122a:	6023      	str	r3, [r4, #0]
 800122c:	2310      	movs	r3, #16
 800122e:	e7af      	b.n	8001190 <_printf_i+0xfc>
 8001230:	6823      	ldr	r3, [r4, #0]
 8001232:	f043 0320 	orr.w	r3, r3, #32
 8001236:	6023      	str	r3, [r4, #0]
 8001238:	2378      	movs	r3, #120	; 0x78
 800123a:	4828      	ldr	r0, [pc, #160]	; (80012dc <_printf_i+0x248>)
 800123c:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 8001240:	e7e3      	b.n	800120a <_printf_i+0x176>
 8001242:	0659      	lsls	r1, r3, #25
 8001244:	bf48      	it	mi
 8001246:	b2b6      	uxthmi	r6, r6
 8001248:	e7e6      	b.n	8001218 <_printf_i+0x184>
 800124a:	4615      	mov	r5, r2
 800124c:	e7bb      	b.n	80011c6 <_printf_i+0x132>
 800124e:	682b      	ldr	r3, [r5, #0]
 8001250:	6826      	ldr	r6, [r4, #0]
 8001252:	1d18      	adds	r0, r3, #4
 8001254:	6961      	ldr	r1, [r4, #20]
 8001256:	6028      	str	r0, [r5, #0]
 8001258:	0635      	lsls	r5, r6, #24
 800125a:	681b      	ldr	r3, [r3, #0]
 800125c:	d501      	bpl.n	8001262 <_printf_i+0x1ce>
 800125e:	6019      	str	r1, [r3, #0]
 8001260:	e002      	b.n	8001268 <_printf_i+0x1d4>
 8001262:	0670      	lsls	r0, r6, #25
 8001264:	d5fb      	bpl.n	800125e <_printf_i+0x1ca>
 8001266:	8019      	strh	r1, [r3, #0]
 8001268:	2300      	movs	r3, #0
 800126a:	4615      	mov	r5, r2
 800126c:	6123      	str	r3, [r4, #16]
 800126e:	e7ba      	b.n	80011e6 <_printf_i+0x152>
 8001270:	682b      	ldr	r3, [r5, #0]
 8001272:	2100      	movs	r1, #0
 8001274:	1d1a      	adds	r2, r3, #4
 8001276:	602a      	str	r2, [r5, #0]
 8001278:	681d      	ldr	r5, [r3, #0]
 800127a:	6862      	ldr	r2, [r4, #4]
 800127c:	4628      	mov	r0, r5
 800127e:	f000 f8d9 	bl	8001434 <memchr>
 8001282:	b108      	cbz	r0, 8001288 <_printf_i+0x1f4>
 8001284:	1b40      	subs	r0, r0, r5
 8001286:	6060      	str	r0, [r4, #4]
 8001288:	6863      	ldr	r3, [r4, #4]
 800128a:	6123      	str	r3, [r4, #16]
 800128c:	2300      	movs	r3, #0
 800128e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 8001292:	e7a8      	b.n	80011e6 <_printf_i+0x152>
 8001294:	462a      	mov	r2, r5
 8001296:	4649      	mov	r1, r9
 8001298:	4640      	mov	r0, r8
 800129a:	6923      	ldr	r3, [r4, #16]
 800129c:	47d0      	blx	sl
 800129e:	3001      	adds	r0, #1
 80012a0:	d0ab      	beq.n	80011fa <_printf_i+0x166>
 80012a2:	6823      	ldr	r3, [r4, #0]
 80012a4:	079b      	lsls	r3, r3, #30
 80012a6:	d413      	bmi.n	80012d0 <_printf_i+0x23c>
 80012a8:	68e0      	ldr	r0, [r4, #12]
 80012aa:	9b03      	ldr	r3, [sp, #12]
 80012ac:	4298      	cmp	r0, r3
 80012ae:	bfb8      	it	lt
 80012b0:	4618      	movlt	r0, r3
 80012b2:	e7a4      	b.n	80011fe <_printf_i+0x16a>
 80012b4:	2301      	movs	r3, #1
 80012b6:	4632      	mov	r2, r6
 80012b8:	4649      	mov	r1, r9
 80012ba:	4640      	mov	r0, r8
 80012bc:	47d0      	blx	sl
 80012be:	3001      	adds	r0, #1
 80012c0:	d09b      	beq.n	80011fa <_printf_i+0x166>
 80012c2:	3501      	adds	r5, #1
 80012c4:	68e3      	ldr	r3, [r4, #12]
 80012c6:	9903      	ldr	r1, [sp, #12]
 80012c8:	1a5b      	subs	r3, r3, r1
 80012ca:	42ab      	cmp	r3, r5
 80012cc:	dcf2      	bgt.n	80012b4 <_printf_i+0x220>
 80012ce:	e7eb      	b.n	80012a8 <_printf_i+0x214>
 80012d0:	2500      	movs	r5, #0
 80012d2:	f104 0619 	add.w	r6, r4, #25
 80012d6:	e7f5      	b.n	80012c4 <_printf_i+0x230>
 80012d8:	08001585 	.word	0x08001585
 80012dc:	08001596 	.word	0x08001596

080012e0 <_sbrk_r>:
 80012e0:	b538      	push	{r3, r4, r5, lr}
 80012e2:	2300      	movs	r3, #0
 80012e4:	4d05      	ldr	r5, [pc, #20]	; (80012fc <_sbrk_r+0x1c>)
 80012e6:	4604      	mov	r4, r0
 80012e8:	4608      	mov	r0, r1
 80012ea:	602b      	str	r3, [r5, #0]
 80012ec:	f7ff f832 	bl	8000354 <_sbrk>
 80012f0:	1c43      	adds	r3, r0, #1
 80012f2:	d102      	bne.n	80012fa <_sbrk_r+0x1a>
 80012f4:	682b      	ldr	r3, [r5, #0]
 80012f6:	b103      	cbz	r3, 80012fa <_sbrk_r+0x1a>
 80012f8:	6023      	str	r3, [r4, #0]
 80012fa:	bd38      	pop	{r3, r4, r5, pc}
 80012fc:	20000090 	.word	0x20000090

08001300 <__sread>:
 8001300:	b510      	push	{r4, lr}
 8001302:	460c      	mov	r4, r1
 8001304:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001308:	f000 f8ae 	bl	8001468 <_read_r>
 800130c:	2800      	cmp	r0, #0
 800130e:	bfab      	itete	ge
 8001310:	6d63      	ldrge	r3, [r4, #84]	; 0x54
 8001312:	89a3      	ldrhlt	r3, [r4, #12]
 8001314:	181b      	addge	r3, r3, r0
 8001316:	f423 5380 	biclt.w	r3, r3, #4096	; 0x1000
 800131a:	bfac      	ite	ge
 800131c:	6563      	strge	r3, [r4, #84]	; 0x54
 800131e:	81a3      	strhlt	r3, [r4, #12]
 8001320:	bd10      	pop	{r4, pc}

08001322 <__swrite>:
 8001322:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8001326:	461f      	mov	r7, r3
 8001328:	898b      	ldrh	r3, [r1, #12]
 800132a:	4605      	mov	r5, r0
 800132c:	05db      	lsls	r3, r3, #23
 800132e:	460c      	mov	r4, r1
 8001330:	4616      	mov	r6, r2
 8001332:	d505      	bpl.n	8001340 <__swrite+0x1e>
 8001334:	2302      	movs	r3, #2
 8001336:	2200      	movs	r2, #0
 8001338:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 800133c:	f000 f868 	bl	8001410 <_lseek_r>
 8001340:	89a3      	ldrh	r3, [r4, #12]
 8001342:	4632      	mov	r2, r6
 8001344:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 8001348:	81a3      	strh	r3, [r4, #12]
 800134a:	4628      	mov	r0, r5
 800134c:	463b      	mov	r3, r7
 800134e:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8001352:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8001356:	f000 b817 	b.w	8001388 <_write_r>

0800135a <__sseek>:
 800135a:	b510      	push	{r4, lr}
 800135c:	460c      	mov	r4, r1
 800135e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001362:	f000 f855 	bl	8001410 <_lseek_r>
 8001366:	1c43      	adds	r3, r0, #1
 8001368:	89a3      	ldrh	r3, [r4, #12]
 800136a:	bf15      	itete	ne
 800136c:	6560      	strne	r0, [r4, #84]	; 0x54
 800136e:	f423 5380 	biceq.w	r3, r3, #4096	; 0x1000
 8001372:	f443 5380 	orrne.w	r3, r3, #4096	; 0x1000
 8001376:	81a3      	strheq	r3, [r4, #12]
 8001378:	bf18      	it	ne
 800137a:	81a3      	strhne	r3, [r4, #12]
 800137c:	bd10      	pop	{r4, pc}

0800137e <__sclose>:
 800137e:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8001382:	f000 b813 	b.w	80013ac <_close_r>
	...

08001388 <_write_r>:
 8001388:	b538      	push	{r3, r4, r5, lr}
 800138a:	4604      	mov	r4, r0
 800138c:	4608      	mov	r0, r1
 800138e:	4611      	mov	r1, r2
 8001390:	2200      	movs	r2, #0
 8001392:	4d05      	ldr	r5, [pc, #20]	; (80013a8 <_write_r+0x20>)
 8001394:	602a      	str	r2, [r5, #0]
 8001396:	461a      	mov	r2, r3
 8001398:	f7fe ff8f 	bl	80002ba <_write>
 800139c:	1c43      	adds	r3, r0, #1
 800139e:	d102      	bne.n	80013a6 <_write_r+0x1e>
 80013a0:	682b      	ldr	r3, [r5, #0]
 80013a2:	b103      	cbz	r3, 80013a6 <_write_r+0x1e>
 80013a4:	6023      	str	r3, [r4, #0]
 80013a6:	bd38      	pop	{r3, r4, r5, pc}
 80013a8:	20000090 	.word	0x20000090

080013ac <_close_r>:
 80013ac:	b538      	push	{r3, r4, r5, lr}
 80013ae:	2300      	movs	r3, #0
 80013b0:	4d05      	ldr	r5, [pc, #20]	; (80013c8 <_close_r+0x1c>)
 80013b2:	4604      	mov	r4, r0
 80013b4:	4608      	mov	r0, r1
 80013b6:	602b      	str	r3, [r5, #0]
 80013b8:	f7fe ff9b 	bl	80002f2 <_close>
 80013bc:	1c43      	adds	r3, r0, #1
 80013be:	d102      	bne.n	80013c6 <_close_r+0x1a>
 80013c0:	682b      	ldr	r3, [r5, #0]
 80013c2:	b103      	cbz	r3, 80013c6 <_close_r+0x1a>
 80013c4:	6023      	str	r3, [r4, #0]
 80013c6:	bd38      	pop	{r3, r4, r5, pc}
 80013c8:	20000090 	.word	0x20000090

080013cc <_fstat_r>:
 80013cc:	b538      	push	{r3, r4, r5, lr}
 80013ce:	2300      	movs	r3, #0
 80013d0:	4d06      	ldr	r5, [pc, #24]	; (80013ec <_fstat_r+0x20>)
 80013d2:	4604      	mov	r4, r0
 80013d4:	4608      	mov	r0, r1
 80013d6:	4611      	mov	r1, r2
 80013d8:	602b      	str	r3, [r5, #0]
 80013da:	f7fe ff95 	bl	8000308 <_fstat>
 80013de:	1c43      	adds	r3, r0, #1
 80013e0:	d102      	bne.n	80013e8 <_fstat_r+0x1c>
 80013e2:	682b      	ldr	r3, [r5, #0]
 80013e4:	b103      	cbz	r3, 80013e8 <_fstat_r+0x1c>
 80013e6:	6023      	str	r3, [r4, #0]
 80013e8:	bd38      	pop	{r3, r4, r5, pc}
 80013ea:	bf00      	nop
 80013ec:	20000090 	.word	0x20000090

080013f0 <_isatty_r>:
 80013f0:	b538      	push	{r3, r4, r5, lr}
 80013f2:	2300      	movs	r3, #0
 80013f4:	4d05      	ldr	r5, [pc, #20]	; (800140c <_isatty_r+0x1c>)
 80013f6:	4604      	mov	r4, r0
 80013f8:	4608      	mov	r0, r1
 80013fa:	602b      	str	r3, [r5, #0]
 80013fc:	f7fe ff93 	bl	8000326 <_isatty>
 8001400:	1c43      	adds	r3, r0, #1
 8001402:	d102      	bne.n	800140a <_isatty_r+0x1a>
 8001404:	682b      	ldr	r3, [r5, #0]
 8001406:	b103      	cbz	r3, 800140a <_isatty_r+0x1a>
 8001408:	6023      	str	r3, [r4, #0]
 800140a:	bd38      	pop	{r3, r4, r5, pc}
 800140c:	20000090 	.word	0x20000090

08001410 <_lseek_r>:
 8001410:	b538      	push	{r3, r4, r5, lr}
 8001412:	4604      	mov	r4, r0
 8001414:	4608      	mov	r0, r1
 8001416:	4611      	mov	r1, r2
 8001418:	2200      	movs	r2, #0
 800141a:	4d05      	ldr	r5, [pc, #20]	; (8001430 <_lseek_r+0x20>)
 800141c:	602a      	str	r2, [r5, #0]
 800141e:	461a      	mov	r2, r3
 8001420:	f7fe ff8b 	bl	800033a <_lseek>
 8001424:	1c43      	adds	r3, r0, #1
 8001426:	d102      	bne.n	800142e <_lseek_r+0x1e>
 8001428:	682b      	ldr	r3, [r5, #0]
 800142a:	b103      	cbz	r3, 800142e <_lseek_r+0x1e>
 800142c:	6023      	str	r3, [r4, #0]
 800142e:	bd38      	pop	{r3, r4, r5, pc}
 8001430:	20000090 	.word	0x20000090

08001434 <memchr>:
 8001434:	4603      	mov	r3, r0
 8001436:	b510      	push	{r4, lr}
 8001438:	b2c9      	uxtb	r1, r1
 800143a:	4402      	add	r2, r0
 800143c:	4293      	cmp	r3, r2
 800143e:	4618      	mov	r0, r3
 8001440:	d101      	bne.n	8001446 <memchr+0x12>
 8001442:	2000      	movs	r0, #0
 8001444:	e003      	b.n	800144e <memchr+0x1a>
 8001446:	7804      	ldrb	r4, [r0, #0]
 8001448:	3301      	adds	r3, #1
 800144a:	428c      	cmp	r4, r1
 800144c:	d1f6      	bne.n	800143c <memchr+0x8>
 800144e:	bd10      	pop	{r4, pc}

08001450 <__malloc_lock>:
 8001450:	4801      	ldr	r0, [pc, #4]	; (8001458 <__malloc_lock+0x8>)
 8001452:	f7ff bb13 	b.w	8000a7c <__retarget_lock_acquire_recursive>
 8001456:	bf00      	nop
 8001458:	20000084 	.word	0x20000084

0800145c <__malloc_unlock>:
 800145c:	4801      	ldr	r0, [pc, #4]	; (8001464 <__malloc_unlock+0x8>)
 800145e:	f7ff bb0e 	b.w	8000a7e <__retarget_lock_release_recursive>
 8001462:	bf00      	nop
 8001464:	20000084 	.word	0x20000084

08001468 <_read_r>:
 8001468:	b538      	push	{r3, r4, r5, lr}
 800146a:	4604      	mov	r4, r0
 800146c:	4608      	mov	r0, r1
 800146e:	4611      	mov	r1, r2
 8001470:	2200      	movs	r2, #0
 8001472:	4d05      	ldr	r5, [pc, #20]	; (8001488 <_read_r+0x20>)
 8001474:	602a      	str	r2, [r5, #0]
 8001476:	461a      	mov	r2, r3
 8001478:	f7fe ff02 	bl	8000280 <_read>
 800147c:	1c43      	adds	r3, r0, #1
 800147e:	d102      	bne.n	8001486 <_read_r+0x1e>
 8001480:	682b      	ldr	r3, [r5, #0]
 8001482:	b103      	cbz	r3, 8001486 <_read_r+0x1e>
 8001484:	6023      	str	r3, [r4, #0]
 8001486:	bd38      	pop	{r3, r4, r5, pc}
 8001488:	20000090 	.word	0x20000090

0800148c <_init>:
 800148c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800148e:	bf00      	nop
 8001490:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8001492:	bc08      	pop	{r3}
 8001494:	469e      	mov	lr, r3
 8001496:	4770      	bx	lr

08001498 <_fini>:
 8001498:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800149a:	bf00      	nop
 800149c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800149e:	bc08      	pop	{r3}
 80014a0:	469e      	mov	lr, r3
 80014a2:	4770      	bx	lr
